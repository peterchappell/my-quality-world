{"version":3,"sources":["utils/db.js","utils/muiTheme.js","components/AppAdd/index.js","components/AppHeader/index.js","utils/constants.js","components/ItemNeeds/index.js","components/ItemCard/index.js","components/ItemCards/index.js","components/AppNav/index.js","components/BlankState/index.js","components/NeedsChart/index.js","utils/calculateNeedMetPercent.js","components/Home/index.js","components/InfoPanel/index.js","components/ItemAdd/cropImage.js","components/ItemAdd/index.js","components/ConfirmDelete/index.js","components/ItemDetailsSlider/index.js","components/ItemDetails/index.js","utils/useWindowResize.js","components/MapInstructions/index.js","components/MapNeedsStatusPanel/index.js","components/MapView/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["db","Dexie","version","stores","items","theme","createMuiTheme","palette","primary","main","secondary","useStyles","makeStyles","createStyles","fab","bottom","spacing","color","display","position","right","AppAdd","classes","to","className","Fab","aria-label","toolbar","justifyContent","siteNameLink","textDecoration","AppHeader","props","openInfoHandler","AppBar","component","Toolbar","Typography","variant","IconButton","edge","onClick","NEEDS","name","shortName","key","colour","description","container","flexDirection","chart","backgroundColor","grey","borderRadius","height","bar","left","top","ItemNeeds","item","Grid","map","need","xs","background","style","width","value","itemImage","card","margin","untitled","editAction","ItemCard","history","useHistory","Container","maxWidth","Card","raised","image","src","alt","CardContent","gutterBottom","CardActions","Button","size","itemId","id","push","startIcon","previousButton","zIndex","breakpoints","up","nextButton","buttonHide","noCards","alignItems","flexBasis","padding","textAlign","VirtualizeSwipeableViews","virtualize","SwipeableViews","ItemCards","itemIndex","useState","currentIndex","setCurrentIndex","isSliding","setIsSliding","length","index","onChangeIndex","newIndex","enableMouseEvents","disabled","onSwitching","onTransitionEnd","slideRenderer","mod","AppNav","navValue","navChangeHandler","BottomNavigation","showLabels","BottomNavigationAction","Link","label","selected","icon","divider","BlankState","Divider","circleContainer","type","animationDuration","valueCircle","strokeLinecap","outerContainer","fontSize","NeedsChart","hideValue","Box","CircularProgress","thickness","circle","Math","round","calculateNeedMetPercent","itemsCheck","maxForNeed","needScore","forEach","level","min","needsContainer","Home","dialogContent","marginTop","quote","borderLeft","paddingLeft","section","content","Transition","React","forwardRef","ref","Slide","direction","InfoPanel","isOpen","closeHandler","Dialog","fullScreen","open","scroll","aria-labelledby","TransitionComponent","DialogTitle","DialogContent","dividers","DialogContentText","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","href","rel","target","DialogActions","autoFocus","data-testid","createImage","url","Promise","resolve","reject","imageEl","Image","addEventListener","error","getRadianAngle","degreeValue","PI","getCroppedImg","imageSrc","pixelCrop","a","rotation","resizeOptions","canvasEl","document","createElement","ctx","getContext","safeArea","max","translate","rotate","drawImage","data","getImageData","putImageData","x","y","toDataURL","imgToResize","aspect","fileInput","upload","uploadContainer","cropContainer","flex","zoomControls","actions","loadingBackdrop","drawer","saveHandler","fileUpload","setFileUpload","croppedAreaPixels","setCroppedAreaPixels","isCropping","setIsCropping","crop","setCrop","zoom","setZoom","onCropComplete","useCallback","croppedArea","currentCroppedAreaPixels","cropImageAndSave","imgToSave","htmlFor","accept","onChange","event","fileReader","FileReader","file","files","onload","result","readAsDataURL","encType","onCropChange","onZoomChange","Slider","step","e","newZoom","Backdrop","ConfirmDelete","deleteHandler","onClose","sliderGridItem","ItemDetailsSlider","propertyName","currentValue","changeHandler","marginBottom","newValue","root","field","paddingBottom","paddingTop","down","imageGrid","actionDivider","actionArea","deleteButton","dark","ItemDetails","thisItem","setThisItem","isDeleting","setIsDeleting","handleSliderChange","updatedItem","useEffect","sm","TextField","placeholder","defaultProps","physiology","loveAndBelonging","power","fun","freedom","getSize","window","innerWidth","documentElement","clientWidth","body","innerHeight","clientHeight","useWindowResize","setSize","timeoutId","resizeListener","clearTimeout","setTimeout","removeEventListener","MapInstructions","numItems","showMessage","setShowMessage","okayHandler","localStorage","setItem","getItem","boxShadow","shadows","transform","connector","borderRight","borderTop","MapNeedsStatusPanel","isShowing","Grow","appear","in","mapContainer","noItems","MapView","handleSaveItem","containerRef","useRef","showUserStatus","setShowUserStatus","showUserStatusOnDrag","setShowUserStatusOnDrag","mapHeight","setMapHeight","mapWidth","setMapWidth","mapScale","setMapScale","mapScaleX","setMapScaleX","mapScaleY","setMapScaleY","windowSize","calculateNewLevel","posX","posY","absolutePosX","abs","absolutePosY","radiusAdjustment","distance","sqrt","maxDistance","CANVAS_WIDTH","handleCanvasBounds","pos","newPosX","newPosY","ITEM_SIZE","saveItem","toggleUserStatus","handleUserStatusOnDrag","isDragging","renderItem","imgEl","itemHeight","imageRatio","itemPosition","angle","random","cos","sin","getItemPosition","Fragment","stroke","strokeWidth","points","cornerRadius","offset","fill","scaleY","draggable","dragBoundFunc","onDragStart","children","setAttrs","shadowOffset","handleDragStartShadow","onDragEnd","duration","shadowOffsetX","shadowOffsetY","handleDragEndShadow","currentTarget","attrs","shadowColor","shadowBlur","shadowOpacity","current","offsetHeight","offsetWidth","scaleX","offsetX","offsetY","radius","onMouseUp","onTap","appContainer","mainContainer","overflowY","loading","NEW_ITEM","App","setItems","isInfoOpen","setIsInfoOpen","currentItemIndex","setCurrentItemIndex","currentNavValue","setCurrentNavValue","isLoaded","setIsLoaded","location","useLocation","itemData","updatedItems","indexOfUpdate","findIndex","table","update","deleteItem","indexOfItemToRemove","splice","delete","RenderDetails","useParams","editingItem","find","parseInt","pathName","pathname","slice","toArray","then","storedItems","ThemeProvider","disableGutters","path","newItem","add","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","hashType","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.910737f9.chunk.js","sourcesContent":["import Dexie from 'dexie';\n\nexport const tableName = 'items';\n\nconst db = new Dexie('MyQualityWorldDb');\ndb.version(1).stores({ items: '++id' });\n\nexport default db;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#404b78',\n    },\n    secondary: {\n      main: '#999999',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles((theme) => createStyles({\n  fab: {\n    bottom: theme.spacing(9),\n    color: 'white',\n    display: 'block',\n    position: 'fixed',\n    right: theme.spacing(2),\n  },\n}));\n\nexport default function AppAdd() {\n  const classes = useStyles();\n\n  return (\n    <Link to=\"/new\" className={classes.fab}>\n      <Fab color=\"primary\" aria-label=\"add\">\n        <AddIcon />\n      </Fab>\n    </Link>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport HelpIcon from '@material-ui/icons/Help';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  toolbar: {\n    justifyContent: 'space-between',\n  },\n  siteNameLink: {\n    color: 'white',\n    textDecoration: 'none',\n    '&:hover, &:link, &:visited, &:active': {\n      color: 'white',\n    },\n  },\n}));\n\nconst AppHeader = (props) => {\n  const { openInfoHandler } = props;\n\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\" component=\"header\">\n      <Toolbar className={classes.toolbar}>\n        <Link to=\"/\" className={classes.siteNameLink}>\n          <Typography variant=\"h6\" component=\"h1\">\n            My Quality World\n          </Typography>\n        </Link>\n        <IconButton edge=\"end\" color=\"inherit\" aria-label=\"information\" onClick={openInfoHandler}>\n          <HelpIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default AppHeader;\n","export const NEEDS = [\n  {\n    name: 'Survival',\n    shortName: 'Survival',\n    key: 'physiology',\n    colour: '#0277BD',\n    description: 'Basic physiological needs for food, shelter, safety and health.',\n  },\n  {\n    name: 'Love and Belonging',\n    shortName: 'Love',\n    key: 'loveAndBelonging',\n    colour: '#EC407A',\n    description: 'Relationships, social connections, to give and receive affection and to feel part of a group.',\n  },\n  {\n    name: 'Power',\n    shortName: 'Power',\n    key: 'power',\n    colour: '#263238',\n    description: 'Achievement, competence and skill, recognition. To be listened to and have a sense of worth.',\n  },\n  {\n    name: 'Fun',\n    shortName: 'Fun',\n    key: 'fun',\n    colour: '#FFA000',\n    description: 'To find pleasure, to play, to laugh and to learn.',\n  },\n  {\n    name: 'Freedom',\n    shortName: 'Freedom',\n    key: 'freedom',\n    colour: '#00C853',\n    description: 'Independence, autonomy and choice and to choose your direction in life.',\n  },\n];\n\nexport const MAX_FOR_ITEM = 5;\n\nexport const MAX_LEVEL = 10;\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { NEEDS } from 'utils/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column-reverse',\n  },\n  chart: {\n    backgroundColor: theme.palette.grey[200],\n    borderRadius: '2px',\n    height: '4px',\n    position: 'relative',\n  },\n  bar: {\n    borderRadius: '2px',\n    height: '4px',\n    left: 0,\n    position: 'absolute',\n    top: 0,\n  },\n}));\n\nconst ItemNeeds = (props) => {\n  const {\n    item,\n  } = props;\n\n  const classes = useStyles(props);\n\n  const calculateWidth = (value) => `${(value / 5) * 100}%`;\n\n  return (\n    <Grid container spacing={1}>\n      { NEEDS.map((need) => (\n        <Grid item xs key={`needs_item_values_${need.key}`} className={classes.container}>\n          <Typography variant=\"caption\" component=\"p\">\n            {need.shortName}\n          </Typography>\n          <div className={classes.chart}>\n            <div className={classes.background} />\n            <div\n              className={classes.bar}\n              style={{\n                backgroundColor: need.colour,\n                width: calculateWidth(item[need.key]),\n              }}\n            />\n          </div>\n        </Grid>\n      ))}\n    </Grid>\n\n  );\n};\n\nexport default ItemNeeds;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Container from '@material-ui/core/Container';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Typography from '@material-ui/core/Typography';\n\nimport ItemNeeds from 'components/ItemNeeds';\n\nconst useStyles = makeStyles((theme) => ({\n  itemImage: {\n    width: '100%',\n  },\n  card: {\n    backgroundColor: '#fff',\n    margin: [[theme.spacing(2), 'auto']],\n  },\n  untitled: {\n    color: '#999',\n  },\n  editAction: {\n    flexDirection: 'row-reverse',\n  },\n}));\n\nconst ItemCard = (props) => {\n  const {\n    item,\n  } = props;\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  const editItem = (itemId) => {\n    history.push(`/edit/${itemId}`);\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Card className={classes.card} raised>\n        { item.image && (\n          <img\n            src={item.image}\n            alt={`${item.name}`}\n            className={classes.itemImage}\n          />\n        )}\n        <CardContent>\n          <Typography gutterBottom variant=\"subtitle1\" component=\"h3\" className={!item.name ? classes.untitled : ''}>\n            {item.name || 'Untitled'}\n          </Typography>\n          <ItemNeeds item={item} />\n        </CardContent>\n        <CardActions className={classes.editAction}>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => {\n              editItem(item.id);\n            }}\n            startIcon={<EditIcon />}\n          >\n            Edit\n          </Button>\n        </CardActions>\n      </Card>\n    </Container>\n  );\n};\n\nexport default ItemCard;\n","import React, { useState } from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport { virtualize } from 'react-swipeable-views-utils';\nimport { mod } from 'react-swipeable-views-core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport Typography from '@material-ui/core/Typography';\n\nimport ItemCard from 'components/ItemCard';\n\nconst useStyles = makeStyles((theme) => ({\n  previousButton: {\n    background: 'rgba(255,255,255,0.7)',\n    borderRadius: '50%',\n    left: 0,\n    position: 'absolute',\n    top: '100px',\n    zIndex: 10,\n    [theme.breakpoints.up('sm')]: {\n      top: '200px',\n    },\n  },\n  nextButton: {\n    background: 'rgba(255,255,255,0.7)',\n    borderRadius: '50%',\n    position: 'absolute',\n    right: 0,\n    top: '100px',\n    zIndex: 10,\n    [theme.breakpoints.up('sm')]: {\n      top: '200px',\n    },\n  },\n  buttonHide: {\n    display: 'none',\n  },\n  noCards: {\n    alignItems: 'center',\n    display: 'flex',\n    flexBasis: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    padding: [[0, theme.spacing(2), theme.spacing(4)]],\n    textAlign: 'center',\n  },\n}));\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\nconst ItemCards = (props) => {\n  const {\n    items,\n    itemIndex,\n  } = props;\n\n  const classes = useStyles();\n  const [currentIndex, setCurrentIndex] = useState(itemIndex);\n  const [isSliding, setIsSliding] = useState(false);\n\n  const updateIndex = (newIndex) => {\n    setCurrentIndex(newIndex);\n  };\n\n  const slideRenderer = ({ key, index }) => (\n    <ItemCard key={`card_${key}`} item={items[mod(index, items.length)]} />\n  );\n\n  if (!items.length) {\n    return (\n      <div className={classes.noCards}>\n        <Typography variant=\"body1\" component=\"p\">\n          Your Quality World images will be shown here as cards that you can swipe through...\n        </Typography>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <VirtualizeSwipeableViews\n        index={currentIndex}\n        onChangeIndex={updateIndex}\n        enableMouseEvents\n        disabled={items.length <= 1}\n        onSwitching={() => {\n          setIsSliding(true);\n        }}\n        onTransitionEnd={() => {\n          setIsSliding(false);\n        }}\n        slideRenderer={slideRenderer}\n      />\n      {items.length > 1 && (\n        <>\n          <div className={isSliding ? classes.buttonHide : classes.previousButton}>\n            <IconButton\n              aria-label=\"Previous\"\n              color=\"primary\"\n              onClick={() => {\n                setCurrentIndex(currentIndex - 1);\n              }}\n            >\n              <KeyboardArrowLeftIcon />\n            </IconButton>\n          </div>\n          <div className={isSliding ? classes.buttonHide : classes.nextButton}>\n            <IconButton\n              aria-label=\"Next\"\n              color=\"primary\"\n              onClick={() => {\n                setCurrentIndex(currentIndex + 1);\n              }}\n            >\n              <KeyboardArrowRightIcon />\n            </IconButton>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ItemCards;\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ViewCarouselIcon from '@material-ui/icons/ViewCarousel';\n\nconst AppNav = (props) => {\n  const {\n    navValue,\n    navChangeHandler,\n  } = props;\n\n  return (\n    <BottomNavigation showLabels component=\"nav\" value={navValue}>\n      <BottomNavigationAction\n        component={Link}\n        to=\"/\"\n        label=\"Home\"\n        value=\"home\"\n        selected={navValue === 'home'}\n        icon={<PersonIcon />}\n        onClick={() => navChangeHandler('home')}\n      />\n      <BottomNavigationAction\n        component={Link}\n        to=\"/cards\"\n        label=\"Cards\"\n        value=\"cards\"\n        selected={navValue === 'cards'}\n        icon={<ViewCarouselIcon />}\n        onClick={() => navChangeHandler('cards')}\n      />\n      <BottomNavigationAction\n        component={Link}\n        to=\"/map\"\n        label=\"Map\"\n        value=\"map\"\n        selected={navValue === 'map'}\n        icon={<AccountTreeIcon />}\n        onClick={() => navChangeHandler('map')}\n      />\n    </BottomNavigation>\n  );\n};\n\nexport default AppNav;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    textAlign: 'center',\n  },\n  divider: {\n    margin: [[theme.spacing(2), 'auto']],\n    maxWidth: '300px',\n  },\n}));\n\nconst BlankState = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <Typography variant=\"body1\" component=\"p\" gutterBottom>\n        Let&apos;s get started by adding some items to your quality world.\n      </Typography>\n      <Typography variant=\"body1\" component=\"p\" gutterBottom>\n        You can add as many as you like, but try and start with at least a few.\n      </Typography>\n      <Divider className={classes.divider} />\n      <Typography variant=\"body1\" component=\"p\" gutterBottom>\n        Click the big plus button in the bottom corner to add your first item.\n      </Typography>\n    </div>\n  );\n};\n\nexport default BlankState;\n","import React from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  circleContainer: {\n    position: 'relative',\n  },\n  background: {\n    color: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  value: {\n    animationDuration: '550ms',\n    position: 'absolute',\n    left: 0,\n  },\n  valueCircle: {\n    strokeLinecap: 'round',\n    color: ({ colour }) => colour,\n  },\n  outerContainer: {\n    display: 'inline-flex',\n  },\n  label: {\n    display: 'block',\n    fontSize: ({ type }) => (type === 'mini' ? '0.6rem' : '0.75rem'),\n  },\n}));\n\nconst NeedsChart = (props) => {\n  const {\n    value,\n    label,\n    // eslint-disable-next-line no-unused-vars\n    colour,\n    type,\n    hideValue,\n  } = props;\n\n  const classes = useStyles(props);\n\n  return (\n    <>\n      <Box position=\"relative\" className={classes.outerContainer}>\n        <div className={classes.circleContainer}>\n          <CircularProgress\n            variant=\"static\"\n            value={100}\n            size={type === 'mini' ? 20 : 60}\n            thickness={4}\n            className={classes.background}\n          />\n          <CircularProgress\n            variant=\"static\"\n            value={value}\n            size={type === 'mini' ? 20 : 60}\n            thickness={4}\n            className={classes.value}\n            classes={{\n              circle: classes.valueCircle,\n            }}\n          />\n        </div>\n        { !hideValue && (\n          <Box\n            top={0}\n            left={0}\n            bottom={0}\n            right={0}\n            position=\"absolute\"\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">\n              {`${Math.round(value)}%`}\n            </Typography>\n          </Box>\n        )}\n      </Box>\n      {label && (\n        <Typography variant=\"caption\" className={classes.label}>\n          {label}\n        </Typography>\n      )}\n    </>\n  );\n};\n\nexport default NeedsChart;\n","import {\n  MAX_FOR_ITEM,\n  MAX_LEVEL,\n} from './constants';\n\nconst calculateNeedMetPercent = (need, items) => {\n  const itemsCheck = [...items];\n  if (!itemsCheck.length) {\n    return 0;\n  }\n  const maxForNeed = itemsCheck.length * MAX_FOR_ITEM * MAX_LEVEL;\n  let needScore = 0;\n  itemsCheck.forEach((item) => {\n    needScore += (item[need] || 0) * item.level;\n  });\n  needScore = Math.min((needScore / maxForNeed) * 100, 100);\n  if (needScore < 0) {\n    needScore = 0;\n  }\n  return needScore;\n};\n\nexport default calculateNeedMetPercent;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport BlankState from 'components/BlankState';\nimport NeedsChart from 'components/NeedsChart';\nimport calculateNeedMetPercent from 'utils/calculateNeedMetPercent';\nimport { NEEDS } from 'utils/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: `calc(100% - ${theme.spacing(4)}px)`,\n    margin: [[theme.spacing(2), 'auto']],\n    textAlign: 'center',\n    [theme.breakpoints.up('sm')]: {\n      justifyContent: 'center',\n    },\n  },\n  needsContainer: {\n    margin: [[theme.spacing(2), 'auto', 0]],\n  },\n}));\n\nconst Home = (props) => {\n  const {\n    items,\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"md\" className={classes.container}>\n      <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n        Welcome\n      </Typography>\n      { items.length ? (\n        <>\n          <Typography variant=\"body1\" component=\"p\" gutterBottom>\n            You have\n            { items.length === 1 ? (\n              ' 1 item '\n            ) : (\n              ` ${items.length} items `\n            )}\n            in your quality world.\n          </Typography>\n          <Typography variant=\"body1\" component=\"p\" gutterBottom>\n            Here is an overview of how your quality world is meeting your needs.\n          </Typography>\n          <div className={classes.needsContainer}>\n            <Grid container spacing={3}>\n              { NEEDS.map((need) => (\n                <Grid item xs key={`need_score_${need.key}`}>\n                  <NeedsChart\n                    value={calculateNeedMetPercent(need.key, items)}\n                    label={need.name}\n                    colour={need.colour}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          </div>\n        </>\n      ) : (\n        <BlankState />\n      )}\n    </Container>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slide from '@material-ui/core/Slide';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  dialogContent: {\n    margin: '0 auto',\n    maxWidth: '700px',\n    [theme.breakpoints.up('md')]: {\n      marginTop: theme.spacing(5),\n    },\n  },\n  quote: {\n    borderLeft: '5px solid #ccc',\n    margin: [[theme.spacing(2), 0]],\n    paddingLeft: theme.spacing(2),\n  },\n  section: {\n    flexDirection: 'column',\n  },\n  content: {\n    backgroundColor: '#f5f5f5',\n  },\n}));\n\nconst Transition = React.forwardRef((props, ref) => (\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  <Slide direction=\"left\" ref={ref} {...props} />\n));\n\nconst InfoPanel = (props) => {\n  const {\n    isOpen,\n    closeHandler,\n  } = props;\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      fullScreen\n      open={isOpen}\n      scroll=\"paper\"\n      aria-labelledby=\"dialog-title-help\"\n      TransitionComponent={Transition}\n    >\n      <DialogTitle id=\"dialog-title-help\">\n        <IconButton edge=\"start\" color=\"inherit\" onClick={closeHandler} aria-label=\"close\">\n          <CloseIcon />\n        </IconButton>\n        Help\n      </DialogTitle>\n      <DialogContent dividers className={classes.content}>\n        <DialogContentText component=\"div\">\n          <div className={classes.dialogContent}>\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"help-about\"\n              >\n                <Typography variant=\"h6\" component=\"h3\">\n                  What is a quality world?\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails id=\"help-about\" className={classes.section}>\n                <blockquote className={classes.quote}>\n                  <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                    Dr. Glasser describes the Quality World as a &quot;personal picture\n                    album&quot; of all the people, things, ideas, and ideals that we have\n                    discovered increase the quality of our lives.\n                  </Typography>\n                  <Typography variant=\"body2\" component=\"footer\">\n                    <a\n                      href=\"https://www.brucedavenport.com/quality-world.html\"\n                      rel=\"noopener noreferrer\"\n                      target=\"_blank\"\n                    >\n                      Bruce Davenport, An Introduction to Choice Theory\n                    </a>\n                  </Typography>\n                </blockquote>\n                <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                  Visualising our own quality world helps us think the people, things and\n                  activities in our lives that we really value.\n                </Typography>\n                <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                  We can also think about how our quality world items help us meet our\n                  basic needs in life.\n                </Typography>\n              </AccordionDetails>\n            </Accordion>\n\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"help-use\"\n                id=\"about-header\"\n              >\n                <Typography variant=\"h6\" component=\"h3\">\n                  How do I use this tool?\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails id=\"help-use\" className={classes.section}>\n                <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                  Click the big plus button in the bottom right of the screen to add\n                  items to your quality world.\n                </Typography>\n                <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                  For each item you add, upload an image and then spend a moment\n                  indicating how that item helps you meet your basic needs.\n                </Typography>\n                <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                  You can then review your quality world items by flicking through\n                  them like cards or by using the map view.\n                </Typography>\n              </AccordionDetails>\n            </Accordion>\n\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"help-use\"\n                id=\"about-header\"\n              >\n                <Typography variant=\"h6\" component=\"h3\">\n                  What is the map view?\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails id=\"help-use\" className={classes.section}>\n                <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                  Your quality world is always changing. Sometimes we&apos;re not able to enjoy\n                  items in our quality world for various reasons. And some of our other quality\n                  world items might play a very big part in our lives right now.\n                </Typography>\n                <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                  The map view allows you to move items further away or close to you to reflect\n                  how big a part those items play in your life right now.\n                </Typography>\n                <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                  As you move items around on the map, you can see the effect they have on how\n                  your basic needs are being met.\n                </Typography>\n              </AccordionDetails>\n            </Accordion>\n\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"help-use\"\n                id=\"about-header\"\n              >\n                <Typography variant=\"h6\" component=\"h3\">\n                  Privacy\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails id=\"help-use\" className={classes.section}>\n                <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                  All the data you add to this tool is only stored on your device. It is\n                  not uploaded to the internet.\n                </Typography>\n                <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                  Only people who have access to your device will be able to see your\n                  quality world.\n                </Typography>\n              </AccordionDetails>\n            </Accordion>\n          </div>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={closeHandler} color=\"primary\" autoFocus data-testid=\"close_button_text\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default InfoPanel;\n","/**\n * NB: This file was adapted from the example code at:\n * https://github.com/ricardo-ch/react-easy-crop\n * (see https://codesandbox.io/s/y09komm059)\n */\n\nconst createImage = (url) => (\n  new Promise((resolve, reject) => {\n    const imageEl = new Image();\n    imageEl.addEventListener('load', () => resolve(imageEl));\n    imageEl.addEventListener('error', (error) => reject(error));\n    imageEl.src = url;\n  })\n);\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180;\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0, resizeOptions) {\n  const imageEl = await createImage(imageSrc);\n  const canvasEl = document.createElement('canvas');\n  const ctx = canvasEl.getContext('2d');\n\n  const safeArea = Math.max(imageEl.width, imageEl.height) * 2;\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvasEl.width = safeArea;\n  canvasEl.height = safeArea;\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2);\n  ctx.rotate(getRadianAngle(rotation));\n  ctx.translate(-safeArea / 2, -safeArea / 2);\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    imageEl,\n    safeArea / 2 - imageEl.width * 0.5,\n    safeArea / 2 - imageEl.height * 0.5,\n  );\n  const data = ctx.getImageData(0, 0, safeArea, safeArea);\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvasEl.width = pixelCrop.width;\n  canvasEl.height = pixelCrop.height;\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    0 - safeArea / 2 + imageEl.width * 0.5 - pixelCrop.x,\n    0 - safeArea / 2 + imageEl.height * 0.5 - pixelCrop.y,\n  );\n\n  if (resizeOptions) {\n    const imgToResize = await createImage(canvasEl.toDataURL('image/jpeg'));\n    imgToResize.width = resizeOptions.width;\n    canvasEl.width = resizeOptions.width;\n    canvasEl.height = resizeOptions.width * (1 / resizeOptions.aspect);\n    ctx.drawImage(imgToResize, 0, 0, 800, 600);\n  }\n\n  return canvasEl.toDataURL('image/jpeg');\n}\n","import React, { useState, useCallback } from 'react';\nimport Cropper from 'react-easy-crop';\n\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Container from '@material-ui/core/Container';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\n\nimport getCroppedImg from './cropImage';\n\nconst ASPECT = 4 / 3;\nconst WIDTH = 800;\n\nconst useStyles = makeStyles((theme) => createStyles({\n  fileInput: {\n    display: 'none',\n  },\n  upload: {\n    marginTop: theme.spacing(1),\n  },\n  uploadContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    margin: [[theme.spacing(2), 0]],\n  },\n  cropContainer: {\n    backgroundColor: '#fff',\n    flex: [[1, 0, '220px']],\n    marginTop: theme.spacing(1),\n    position: 'relative',\n  },\n  zoomControls: {\n    padding: theme.spacing(1),\n  },\n  actions: {\n    padding: theme.spacing(1),\n  },\n  loadingBackdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport default function AppAdd(props) {\n  const {\n    saveHandler,\n  } = props;\n\n  const classes = useStyles();\n  const [fileUpload, setFileUpload] = useState();\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState();\n  const [isCropping, setIsCropping] = useState(false);\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n\n  const onCropComplete = useCallback((croppedArea, currentCroppedAreaPixels) => {\n    setCroppedAreaPixels(currentCroppedAreaPixels);\n  }, []);\n\n  const handleImageSelection = (event) => {\n    const fileReader = new FileReader();\n    const file = event.target.files[0];\n    fileReader.onload = (upload) => {\n      setFileUpload(upload.target.result);\n    };\n    fileReader.readAsDataURL(file);\n  };\n\n  const cancelImage = () => {\n    setFileUpload(null);\n  };\n\n  const cropImageAndSave = async () => {\n    setIsCropping(true);\n    const imgToSave = await getCroppedImg(\n      fileUpload,\n      croppedAreaPixels,\n      0,\n      {\n        width: WIDTH,\n        aspect: ASPECT,\n      },\n    );\n    setIsCropping(false);\n    saveHandler(imgToSave);\n  };\n\n  return (\n    <>\n      <Container maxWidth=\"sm\">\n        <div className={classes.uploadContainer}>\n          { !fileUpload && (\n            <>\n              <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                Select a photo to add to your quality world.\n              </Typography>\n              <label htmlFor=\"file_upload\" className={classes.upload}>\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                  Select Photo\n                </Button>\n                <input\n                  accept=\"image/*\"\n                  className={classes.fileInput}\n                  id=\"file_upload\"\n                  type=\"file\"\n                  onChange={handleImageSelection}\n                  encType=\"multipart/form-data\"\n                />\n              </label>\n            </>\n          )}\n          { fileUpload && (\n            <>\n              <div>\n                <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                  Now you can crop and move your photo so that it fits\n                  nicely in the box.\n                </Typography>\n              </div>\n              <div className={classes.cropContainer}>\n                <Cropper\n                  image={fileUpload}\n                  crop={crop}\n                  zoom={zoom}\n                  aspect={ASPECT}\n                  onCropChange={setCrop}\n                  onCropComplete={onCropComplete}\n                  onZoomChange={setZoom}\n                />\n              </div>\n              <div className={classes.zoomControls}>\n                <Slider\n                  value={zoom}\n                  min={1}\n                  max={3}\n                  step={0.1}\n                  aria-labelledby=\"Zoom\"\n                  onChange={(e, newZoom) => setZoom(newZoom)}\n                />\n              </div>\n              <div className={classes.actions}>\n                <Button variant=\"contained\" color=\"primary\" onClick={cropImageAndSave}>\n                  Okay\n                </Button>\n                <Button onClick={cancelImage}>\n                  Cancel\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n      </Container>\n      <Backdrop className={classes.loadingBackdrop} open={isCropping}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </>\n  );\n}\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\n\nconst ConfirmDelete = (props) => {\n  const {\n    deleteHandler,\n    isOpen,\n    closeHandler,\n  } = props;\n\n  return (\n    <Dialog\n      maxWidth=\"xs\"\n      aria-labelledby=\"confirmation-delete-title\"\n      open={isOpen}\n      onClose={closeHandler}\n    >\n      <DialogTitle id=\"confirmation-delete-title\">Delete this item?</DialogTitle>\n      <DialogContent dividers>\n        <Typography variant=\"body2\" component=\"p\" gutterBottom>\n          Are you sure you want to remove this item from your quality world?\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Deleting an item is permanent...\n          But of course, you can always add it back in as a new item.\n          You can do whatever you want.\n          It is your quality world after all.\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={closeHandler} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={deleteHandler} color=\"primary\">\n          Ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ConfirmDelete;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\n\nimport { MAX_FOR_ITEM } from 'utils/constants';\n\nconst MAX = MAX_FOR_ITEM;\nconst MIN = 0;\nconst STEP = 0.1;\n\nconst useStyles = makeStyles(() => ({\n  sliderGridItem: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nconst ItemDetailsSlider = (props) => {\n  const {\n    propertyName,\n    label,\n    currentValue,\n    changeHandler,\n    colour,\n    description,\n  } = props;\n\n  const classes = useStyles();\n\n  const handleValueChange = (event, newValue) => {\n    changeHandler(propertyName, newValue);\n  };\n\n  const increaseValue = () => {\n    if (currentValue < MAX) {\n      changeHandler(propertyName, currentValue + STEP);\n    }\n  };\n\n  const decreaseValue = () => {\n    if (currentValue > MIN) {\n      changeHandler(propertyName, currentValue - STEP);\n    }\n  };\n\n  return (\n    <div style={{ marginTop: '1em', marginBottom: '1em' }}>\n      <Typography id={`strength-${propertyName}`}>\n        {label}\n      </Typography>\n      <Typography variant=\"caption\">\n        {description}\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item>\n          <IconButton aria-label=\"Less\" onClick={decreaseValue} disabled={currentValue <= MIN}>\n            <RemoveIcon />\n          </IconButton>\n        </Grid>\n        <Grid item xs className={classes.sliderGridItem}>\n          <Slider\n            value={currentValue}\n            min={MIN}\n            max={MAX}\n            step={STEP}\n            onChange={handleValueChange}\n            style={{ color: colour }}\n            aria-labelledby={`strength-${propertyName}`}\n          />\n        </Grid>\n        <Grid item>\n          <IconButton aria-label=\"More\" onClick={increaseValue} disabled={currentValue >= MAX}>\n            <AddIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ItemDetailsSlider;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport ConfirmDelete from 'components/ConfirmDelete';\nimport ItemDetailsSlider from 'components/ItemDetailsSlider';\nimport { NEEDS } from 'utils/constants';\n\nconst useStyles = makeStyles((theme) => createStyles({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  field: {\n    width: '100%',\n  },\n  itemImage: {\n    maxWidth: '100%',\n  },\n  container: {\n    marginBottom: theme.spacing(3),\n    marginTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n    [theme.breakpoints.down('xs')]: {\n      marginBottom: 0,\n      marginTop: 0,\n      paddingBottom: theme.spacing(2),\n      paddingTop: theme.spacing(2),\n    },\n  },\n  imageGrid: {\n    marginBottom: theme.spacing(2),\n  },\n  actionDivider: {\n    marginTop: theme.spacing(2),\n  },\n  actionArea: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: theme.spacing(2),\n  },\n  deleteButton: {\n    color: theme.palette.error.dark,\n  },\n}));\n\nconst ItemDetails = (props) => {\n  const {\n    saveHandler,\n    deleteHandler,\n    item,\n  } = props;\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [thisItem, setThisItem] = useState(item);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const handleChange = (event) => {\n    setThisItem({\n      ...thisItem,\n      name: event.target.value,\n    });\n  };\n\n  const handleSliderChange = (propertyName, newValue) => {\n    const updatedItem = {\n      ...thisItem,\n    };\n    updatedItem[propertyName] = newValue;\n    setThisItem(updatedItem);\n  };\n\n  const saveAndGo = () => {\n    saveHandler(thisItem);\n    history.push('/cards');\n  };\n\n  const doDelete = () => {\n    deleteHandler(item.id);\n    history.push('/cards');\n  };\n\n  const closeConfirmDelete = () => {\n    setIsDeleting(false);\n  };\n\n  useEffect(() => {\n    setThisItem(item);\n  }, [item]);\n\n  return (\n    <Container maxWidth=\"sm\" className={classes.container}>\n      <Grid container spacing={2} className={classes.imageGrid}>\n        <Grid item sm={4} xs={12}>\n          { item.image && (\n            <img\n              src={item.image}\n              alt={`${item.name}`}\n              className={classes.itemImage}\n            />\n          )}\n        </Grid>\n        <Grid item sm={8} xs={12}>\n          <TextField\n            label=\"Item name\"\n            value={thisItem.name}\n            onChange={handleChange}\n            className={classes.field}\n            placeholder=\"Untitled\"\n            variant=\"outlined\"\n          />\n        </Grid>\n      </Grid>\n      <Typography variant=\"body2\" component=\"p\" gutterBottom>\n        Use the sliders below to indicate how this quality world image satisfies your needs.\n      </Typography>\n      {NEEDS.map((need) => (\n        <ItemDetailsSlider\n          propertyName={need.key}\n          label={need.name}\n          currentValue={thisItem[need.key]}\n          changeHandler={handleSliderChange}\n          key={`slider_${need.key}`}\n          colour={need.colour}\n          description={need.description}\n        />\n      ))}\n      <Divider className={classes.actionDivider} />\n      <div className={classes.actionArea}>\n        <Button\n          onClick={saveAndGo}\n          color=\"primary\"\n          startIcon={<SaveIcon />}\n          variant=\"contained\"\n        >\n          Save\n        </Button>\n        <Button\n          size=\"small\"\n          className={classes.deleteButton}\n          onClick={() => {\n            setIsDeleting(true);\n          }}\n          startIcon={<DeleteIcon />}\n        >\n          Delete\n        </Button>\n      </div>\n      <ConfirmDelete\n        isOpen={isDeleting}\n        deleteHandler={doDelete}\n        closeHandler={closeConfirmDelete}\n      />\n    </Container>\n  );\n};\n\nItemDetails.defaultProps = {\n  item: {\n    name: '',\n    physiology: 0,\n    loveAndBelonging: 0,\n    power: 0,\n    fun: 0,\n    freedom: 0,\n    level: 0,\n    id: 0,\n  },\n};\n\nexport default ItemDetails;\n","import { useState, useEffect } from 'react';\n\nconst getSize = () => ({\n  width: window.innerWidth\n    || document.documentElement.clientWidth\n    || document.body.clientWidth,\n  height: window.innerHeight\n    || document.documentElement.clientHeight\n    || document.body.clientHeight,\n});\n\nconst useWindowResize = () => {\n  // save current window width in the state object\n  const [size, setSize] = useState(getSize());\n\n  useEffect(() => {\n    let timeoutId = null;\n    const resizeListener = () => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => setSize(getSize()), 300);\n    };\n    window.addEventListener('resize', resizeListener);\n\n    return () => {\n      window.removeEventListener('resize', resizeListener);\n    };\n  }, []);\n\n  return size;\n};\n\nexport default useWindowResize;\n","import React, { useEffect, useState } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\n\nconst messageConfirmationKey = 'mqw_maps';\n\nconst MapInstructions = (props) => {\n  const {\n    numItems,\n  } = props;\n\n  const [showMessage, setShowMessage] = useState(false);\n\n  const okayHandler = () => {\n    setShowMessage(false);\n    localStorage.setItem(messageConfirmationKey, 'true');\n  };\n\n  useEffect(() => {\n    setShowMessage(!localStorage.getItem(messageConfirmationKey));\n  }, []);\n\n  if (!numItems) {\n    return null;\n  }\n\n  return (\n    <Dialog\n      maxWidth=\"xs\"\n      aria-labelledby=\"instructions-message\"\n      open={showMessage}\n      onClose={okayHandler}\n    >\n      <DialogContent>\n        <Typography variant=\"body2\" component=\"p\" gutterBottom>\n          Move items closer or further away from the centre depending on how big a part they\n          are playing in your life right now.\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Tap on the centre icon to show or hide the needs satisfaction charts.\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={okayHandler} color=\"primary\">\n          Got it\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default MapInstructions;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Grow } from '@material-ui/core';\n\nimport NeedsChart from 'components/NeedsChart';\nimport calculateNeedMetPercent from 'utils/calculateNeedMetPercent';\nimport { NEEDS } from 'utils/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    backgroundColor: '#fff',\n    borderRadius: '5px',\n    bottom: 'calc(50% + 40px)',\n    boxShadow: theme.shadows[6],\n    left: 'calc(50% - 136px)',\n    padding: '10px',\n    position: 'absolute',\n    textAlign: 'center',\n    transform: 'translateX(-50%)',\n    width: '250px',\n  },\n  connector: {\n    bottom: '-10px',\n    display: 'block',\n    width: 0,\n    height: 0,\n    borderLeft: '10px solid transparent',\n    borderRight: '10px solid transparent',\n    borderTop: '10px solid #fff',\n    left: 'calc(50% - 10px)',\n    position: 'absolute',\n  },\n}));\n\nconst MapNeedsStatusPanel = (props) => {\n  const {\n    items,\n    isShowing,\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Grow\n      appear\n      in={isShowing}\n    >\n      <div className={classes.container}>\n        <Grid container spacing={1}>\n          { NEEDS.map((need) => (\n            <Grid item xs key={`need_score_${need.key}`}>\n              <NeedsChart\n                value={calculateNeedMetPercent(need.key, items)}\n                colour={need.colour}\n                type=\"mini\"\n                label={need.shortName}\n                hideValue\n              />\n            </Grid>\n          ))}\n        </Grid>\n        <div className={classes.connector} />\n      </div>\n    </Grow>\n  );\n};\n\nexport default MapNeedsStatusPanel;\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport {\n  Stage,\n  Layer,\n  Circle,\n  Rect,\n  Image,\n  Group,\n  Line,\n} from 'react-konva';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport useWindowResize from 'utils/useWindowResize';\nimport MapInstructions from 'components/MapInstructions';\nimport MapNeedsStatusPanel from 'components/MapNeedsStatusPanel';\nimport { MAX_LEVEL } from 'utils/constants';\nimport Typography from '@material-ui/core/Typography';\n\nconst CANVAS_HEIGHT = 1000;\nconst CANVAS_WIDTH = 1000;\nconst ITEM_SIZE = 100;\n\nconst useStyles = makeStyles((theme) => ({\n  mapContainer: {\n    display: 'flex',\n    height: '100%',\n    width: '100%',\n  },\n  map: {\n    position: 'relative',\n  },\n  noItems: {\n    left: 0,\n    padding: [[theme.spacing(4), theme.spacing(2), theme.spacing(2)]],\n    position: 'absolute',\n    right: 0,\n    textAlign: 'center',\n  },\n}));\n\nconst MapView = (props) => {\n  const {\n    items,\n    handleSaveItem,\n  } = props;\n\n  const classes = useStyles();\n  const containerRef = useRef();\n  const [showUserStatus, setShowUserStatus] = useState(true);\n  const [showUserStatusOnDrag, setShowUserStatusOnDrag] = useState(true);\n  const [mapHeight, setMapHeight] = useState(300);\n  const [mapWidth, setMapWidth] = useState(300);\n  const [mapScale, setMapScale] = useState(1);\n  const [mapScaleX, setMapScaleX] = useState(1);\n  const [mapScaleY, setMapScaleY] = useState(1);\n  const windowSize = useWindowResize();\n\n  const calculateNewLevel = (posX, posY) => {\n    const absolutePosX = Math.abs(posX);\n    const absolutePosY = Math.abs(posY);\n    const radiusAdjustment = ITEM_SIZE * mapScale;\n    const distance = Math.sqrt(absolutePosX ** 2 + absolutePosY ** 2) * mapScale - radiusAdjustment;\n    const maxDistance = Math.sqrt((CANVAS_WIDTH / 2) ** 2 * 2) * mapScale - radiusAdjustment * 2;\n    const level = Math.min((1 - (distance / maxDistance)) * 10, MAX_LEVEL);\n    return level;\n  };\n\n  const handleDragStartShadow = (event) => {\n    event.target.children[0].setAttrs({\n      shadowOffset: {\n        x: 15,\n        y: 15,\n      },\n    });\n  };\n\n  const handleDragEndShadow = (event) => {\n    event.target.children[0].to({\n      duration: 0.2,\n      shadowOffsetX: 5,\n      shadowOffsetY: 5,\n    });\n  };\n\n  const handleCanvasBounds = (pos) => {\n    let newPosX = pos.x;\n    let newPosY = pos.y;\n    if (pos.x - (ITEM_SIZE / 2) * mapScaleX <= 0) {\n      newPosX = (ITEM_SIZE / 2) * mapScaleX;\n    } else if (pos.x + (ITEM_SIZE / 2) * mapScaleX >= CANVAS_WIDTH * mapScaleX) {\n      newPosX = CANVAS_WIDTH * mapScaleX - (ITEM_SIZE / 2) * mapScaleX;\n    }\n    if (pos.y - (ITEM_SIZE / 2) * mapScaleY <= 0) {\n      newPosY = (ITEM_SIZE / 2) * mapScaleY;\n    } else if (pos.y + (ITEM_SIZE / 2) * mapScaleY >= CANVAS_HEIGHT * mapScaleY) {\n      newPosY = CANVAS_HEIGHT * mapScaleY - (ITEM_SIZE / 2) * mapScaleY;\n    }\n    return {\n      x: newPosX,\n      y: newPosY,\n    };\n  };\n\n  const saveItem = (item, position) => {\n    const updatedItem = {\n      ...item,\n      posX: position.x,\n      posY: position.y,\n      level: calculateNewLevel(position.x, position.y),\n    };\n    handleSaveItem(updatedItem);\n  };\n\n  const toggleUserStatus = () => {\n    if (!items.length) {\n      return;\n    }\n    setShowUserStatus(!showUserStatus);\n  };\n\n  const handleUserStatusOnDrag = (isDragging) => {\n    if (showUserStatus) {\n      setShowUserStatusOnDrag(!isDragging);\n    }\n  };\n\n  const getItemPosition = (item) => {\n    if (item.posX && item.posY) {\n      return {\n        x: item.posX,\n        y: item.posY,\n      };\n    }\n    const angle = Math.random() * Math.PI * 2;\n    const radiusFromCentre = 300;\n    const position = {\n      x: Math.cos(angle) * radiusFromCentre,\n      y: Math.sin(angle) * radiusFromCentre,\n    };\n    saveItem(item, position);\n    return position;\n  };\n\n  const renderItem = (item) => {\n    const imgEl = document.createElement('img');\n    imgEl.src = item.image;\n    const itemHeight = item.imageRatio * ITEM_SIZE * mapScaleX;\n    const itemPosition = getItemPosition(item);\n    return (\n      <React.Fragment key={`map_item_${item.id}`}>\n        <Line\n          stroke=\"#ccc\"\n          strokeWidth={2}\n          points={[\n            0,\n            0,\n            itemPosition.x,\n            itemPosition.y,\n          ]}\n        />\n        <Rect\n          cornerRadius={4}\n          x={itemPosition.x}\n          y={itemPosition.y}\n          offset={{\n            x: (ITEM_SIZE / 2) - 2,\n            y: (itemHeight / 2) - 2,\n          }}\n          width={ITEM_SIZE - 4}\n          height={itemHeight - 4}\n          fill=\"#ccc\"\n          scaleY={1 / mapScaleY}\n        />\n        <Group\n          draggable\n          dragBoundFunc={handleCanvasBounds}\n          onDragStart={(event) => {\n            handleDragStartShadow(event);\n            handleUserStatusOnDrag(true);\n          }}\n          onDragEnd={(event) => {\n            handleDragEndShadow(event);\n            saveItem(item, {\n              x: event.currentTarget.attrs.x,\n              y: event.currentTarget.attrs.y,\n            });\n            handleUserStatusOnDrag(false);\n          }}\n          x={itemPosition.x}\n          y={itemPosition.y}\n          offset={{\n            x: ITEM_SIZE / 2,\n            y: itemHeight / 2,\n          }}\n          width={ITEM_SIZE}\n          height={itemHeight}\n          scaleY={1 / mapScaleY}\n        >\n          <Rect\n            shadowColor=\"black\"\n            shadowBlur={10}\n            shadowOpacity={0.3}\n            width={ITEM_SIZE - 2}\n            height={itemHeight - 2}\n            fill=\"#000\"\n            offset={{\n              x: -1,\n              y: -1,\n            }}\n          />\n          <Image\n            image={imgEl}\n            width={ITEM_SIZE}\n            height={itemHeight}\n          />\n        </Group>\n      </React.Fragment>\n    );\n  };\n\n  const setUpForDraw = () => {\n    setMapHeight(containerRef.current.offsetHeight);\n    setMapWidth(containerRef.current.offsetWidth);\n    setMapScale(Math.min(\n      containerRef.current.offsetWidth / CANVAS_WIDTH,\n      containerRef.current.offsetHeight / CANVAS_HEIGHT,\n    ));\n    setMapScaleX(containerRef.current.offsetWidth / CANVAS_WIDTH);\n    setMapScaleY(containerRef.current.offsetHeight / CANVAS_HEIGHT);\n  };\n\n  useEffect(() => {\n    setUpForDraw();\n  }, [windowSize.width, windowSize.height]);\n\n  return (\n    <div className={classes.mapContainer} ref={containerRef}>\n      <Stage\n        height={mapHeight}\n        width={mapWidth}\n        className={classes.map}\n        scaleX={mapScaleX}\n        scaleY={mapScaleY}\n      >\n        <Layer\n          offsetX={-CANVAS_WIDTH / 2}\n          offsetY={-CANVAS_HEIGHT / 2}\n        >\n          {items.map((item) => renderItem(item))}\n        </Layer>\n        <Layer\n          offsetX={-CANVAS_WIDTH / 2}\n          offsetY={-CANVAS_HEIGHT / 2}\n        >\n          <Circle\n            fill=\"#fff\"\n            radius={(ITEM_SIZE * mapScale) / 2}\n            x={0}\n            y={0}\n            shadowColor=\"black\"\n            shadowBlur={10}\n            shadowOpacity={0.3}\n            scaleX={1 / mapScaleX}\n            scaleY={1 / mapScaleY}\n          />\n          <Circle\n            fill=\"#333\"\n            radius={(ITEM_SIZE * mapScale) / 6}\n            x={0}\n            y={-30 * mapScale}\n            scaleX={1 / mapScaleX}\n            scaleY={1 / mapScaleY}\n          />\n          <Rect\n            cornerRadius={2}\n            width={(ITEM_SIZE / 2) * mapScale}\n            height={(ITEM_SIZE / 4) * mapScale}\n            fill=\"#333\"\n            scaleX={1 / mapScaleX}\n            scaleY={1 / mapScaleY}\n            x={0}\n            y={10 * mapScale}\n            offsetX={(ITEM_SIZE / 4) * mapScale}\n          />\n          <Circle\n            fill=\"transparent\"\n            radius={(ITEM_SIZE * mapScale) / 2}\n            x={0}\n            y={0}\n            scaleX={1 / mapScaleX}\n            scaleY={1 / mapScaleY}\n            onMouseUp={toggleUserStatus}\n            onTap={toggleUserStatus}\n          />\n        </Layer>\n      </Stage>\n      <MapInstructions\n        numItems={items.length}\n      />\n      {items.length ? (\n        <MapNeedsStatusPanel\n          items={items}\n          isShowing={showUserStatus && showUserStatusOnDrag}\n        />\n      ) : (\n        <div className={classes.noItems}>\n          <Typography variant=\"body1\" component=\"p\">\n            Your Quality World images will be shown here as items\n            that you can move around and organise...\n          </Typography>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MapView;\n","import React, { useState, useEffect } from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport {\n  Route,\n  Switch,\n  useParams,\n  useHistory,\n  useLocation,\n} from 'react-router-dom';\n\nimport db, { tableName } from 'utils/db';\nimport theme from 'utils/muiTheme';\nimport AppAdd from 'components/AppAdd';\nimport AppHeader from 'components/AppHeader';\nimport ItemCards from 'components/ItemCards';\nimport AppNav from 'components/AppNav';\nimport Home from 'components/Home';\nimport InfoPanel from 'components/InfoPanel';\nimport ItemAdd from 'components/ItemAdd';\nimport ItemDetails from 'components/ItemDetails';\nimport MapView from 'components/MapView';\n\nconst useStyles = makeStyles(() => ({\n  appContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    justifyContent: 'space-between',\n  },\n  mainContainer: {\n    flexBasis: '100%',\n    overflowY: 'auto',\n    position: 'relative',\n  },\n  loading: {\n    color: theme.palette.grey[500],\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    textAlign: 'center',\n    top: '30%',\n  },\n}));\n\nconst NEW_ITEM = {\n  name: '',\n  image: null,\n  physiology: 0,\n  loveAndBelonging: 0,\n  power: 0,\n  fun: 0,\n  freedom: 0,\n  level: 5,\n};\n\nconst App = () => {\n  const classes = useStyles();\n  const [items, setItems] = useState([]);\n  const [isInfoOpen, setIsInfoOpen] = useState(false);\n  const [currentItemIndex, setCurrentItemIndex] = useState(0);\n  const [currentNavValue, setCurrentNavValue] = useState('');\n  const [isLoaded, setIsLoaded] = useState(false);\n  const history = useHistory();\n  const location = useLocation();\n\n  const addItem = (itemData) => {\n    const newItem = {\n      ...NEW_ITEM,\n      image: itemData,\n      imageRatio: 3 / 4, // TODO: Do this better\n      name: '',\n    };\n    db.table(tableName)\n      .add(newItem)\n      .then((id) => {\n        setItems([\n          ...items,\n          {\n            ...newItem,\n            id,\n          },\n        ]);\n        setCurrentItemIndex(items.length);\n        history.push(`/edit/${id}`);\n      });\n  };\n\n  const saveItem = (itemData) => {\n    const updatedItems = [\n      ...items,\n    ];\n    const indexOfUpdate = updatedItems.findIndex((item) => item.id === itemData.id);\n    updatedItems[indexOfUpdate] = itemData;\n    setItems(updatedItems);\n    setCurrentItemIndex(indexOfUpdate);\n    db.table(tableName).update(itemData.id, itemData);\n  };\n\n  const deleteItem = (itemId) => {\n    const updatedItems = [\n      ...items,\n    ];\n    const indexOfItemToRemove = updatedItems.findIndex((item) => item.id === itemId);\n    updatedItems.splice(indexOfItemToRemove, 1);\n    setItems(updatedItems);\n    setCurrentItemIndex(0);\n    db.table(tableName).delete(itemId);\n  };\n\n  const RenderDetails = () => {\n    const { itemId } = useParams();\n    const editingItem = items.find((item) => item.id === parseInt(itemId, 10));\n    if (editingItem) {\n      return (\n        <ItemDetails\n          saveHandler={saveItem}\n          deleteHandler={deleteItem}\n          item={editingItem}\n        />\n      );\n    }\n    return (\n      <p>That item does not exist...</p>\n    );\n  };\n\n  const openInfo = () => {\n    history.push('info');\n    setIsInfoOpen(true);\n  };\n\n  const closeInfo = () => {\n    history.push('');\n    setIsInfoOpen(false);\n  };\n\n  useEffect(() => {\n    const pathName = location.pathname.slice(1);\n    if (pathName === 'info') {\n      setIsInfoOpen(true);\n    } else {\n      setIsInfoOpen(false);\n    }\n  }, [location.pathname]);\n\n  useEffect(() => {\n    db.table(tableName)\n      .toArray()\n      .then((storedItems) => {\n        setIsLoaded(true);\n        setItems(storedItems);\n      });\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <section className={classes.appContainer}>\n        <AppHeader openInfoHandler={openInfo} />\n        <Container\n          component=\"main\"\n          className={classes.mainContainer}\n          maxWidth={false}\n          disableGutters\n        >\n          { isLoaded ? (\n            <Switch>\n              <Route path=\"/new\">\n                <ItemAdd saveHandler={addItem} />\n              </Route>\n              <Route path=\"/edit/:itemId\">\n                <RenderDetails />\n              </Route>\n              <Route path=\"/map\">\n                <MapView items={items} handleSaveItem={saveItem} />\n                <AppAdd />\n              </Route>\n              <Route path=\"/cards\">\n                <ItemCards\n                  items={items}\n                  itemIndex={currentItemIndex}\n                />\n                <AppAdd />\n              </Route>\n              <Route path=\"/\">\n                <Home items={items} />\n                <AppAdd />\n              </Route>\n            </Switch>\n          ) : (\n            <div className={classes.loading}>Loading...</div>\n          )}\n        </Container>\n        <AppNav\n          navValue={currentNavValue}\n          navChangeHandler={setCurrentNavValue}\n        />\n        <InfoPanel\n          isOpen={isInfoOpen}\n          closeHandler={closeInfo}\n        />\n      </section>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport './index.css';\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router hashType=\"noslash\">\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}