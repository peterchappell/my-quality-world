{"version":3,"sources":["utils/db.js","utils/muiTheme.js","components/AppAdd/index.js","components/AppHeader/index.js","utils/constants.js","components/ItemNeeds/index.js","components/ItemCard/index.js","components/ItemCards/index.js","components/AppNav/index.js","components/BlankState/index.js","components/NeedsChart/index.js","utils/calculateNeedMetPercent.js","components/Home/index.js","components/ItemAdd/cropImage.js","components/ItemAdd/index.js","components/ConfirmDelete/index.js","components/ItemDetailsSlider/index.js","components/ItemDetails/index.js","utils/useWindowResize.js","components/MapInstructions/index.js","components/MapNeedsStatusPanel/index.js","components/MapView/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["db","Dexie","version","stores","items","theme","createMuiTheme","palette","primary","main","secondary","useStyles","makeStyles","createStyles","fab","bottom","spacing","color","display","position","right","AppAdd","classes","to","className","Fab","aria-label","toolbar","justifyContent","siteNameLink","textDecoration","AppHeader","AppBar","component","Toolbar","Typography","variant","NEEDS","name","shortName","key","colour","description","container","flexDirection","chart","backgroundColor","grey","borderRadius","height","bar","left","top","ItemNeeds","props","item","Grid","map","need","xs","background","style","width","value","itemImage","card","margin","untitled","editAction","ItemCard","history","useHistory","Container","maxWidth","Card","raised","image","src","alt","CardContent","gutterBottom","CardActions","Button","size","onClick","itemId","id","push","startIcon","previousButton","zIndex","breakpoints","up","nextButton","buttonHide","noCards","alignItems","flexBasis","padding","textAlign","VirtualizeSwipeableViews","virtualize","SwipeableViews","ItemCards","itemIndex","useState","currentIndex","setCurrentIndex","isSliding","setIsSliding","length","index","onChangeIndex","newIndex","enableMouseEvents","disabled","onSwitching","onTransitionEnd","slideRenderer","mod","IconButton","AppNav","navValue","navChangeHandler","BottomNavigation","showLabels","BottomNavigationAction","Link","label","selected","icon","divider","BlankState","Divider","circleContainer","type","animationDuration","valueCircle","strokeLinecap","outerContainer","fontSize","NeedsChart","hideValue","Box","CircularProgress","thickness","circle","Math","round","calculateNeedMetPercent","itemsCheck","maxForNeed","needScore","forEach","level","min","needsContainer","Home","createImage","url","Promise","resolve","reject","imageEl","Image","addEventListener","error","getRadianAngle","degreeValue","PI","getCroppedImg","imageSrc","pixelCrop","a","rotation","resizeOptions","canvasEl","document","createElement","ctx","getContext","safeArea","max","translate","rotate","drawImage","data","getImageData","putImageData","x","y","toDataURL","imgToResize","aspect","fileInput","upload","marginTop","uploadContainer","cropContainer","flex","zoomControls","actions","loadingBackdrop","drawer","saveHandler","fileUpload","setFileUpload","croppedAreaPixels","setCroppedAreaPixels","isCropping","setIsCropping","crop","setCrop","zoom","setZoom","onCropComplete","useCallback","croppedArea","currentCroppedAreaPixels","cropImageAndSave","imgToSave","htmlFor","accept","onChange","event","fileReader","FileReader","file","target","files","onload","result","readAsDataURL","encType","onCropChange","onZoomChange","Slider","step","aria-labelledby","e","newZoom","Backdrop","open","ConfirmDelete","deleteHandler","isOpen","closeHandler","Dialog","onClose","DialogTitle","DialogContent","dividers","DialogActions","autoFocus","sliderGridItem","ItemDetailsSlider","propertyName","currentValue","changeHandler","marginBottom","newValue","root","field","paddingBottom","paddingTop","down","imageGrid","actionDivider","actionArea","deleteButton","dark","ItemDetails","thisItem","setThisItem","isDeleting","setIsDeleting","handleSliderChange","updatedItem","useEffect","sm","TextField","placeholder","defaultProps","physiology","loveAndBelonging","power","fun","freedom","getSize","window","innerWidth","documentElement","clientWidth","body","innerHeight","clientHeight","useWindowResize","setSize","timeoutId","resizeListener","clearTimeout","setTimeout","removeEventListener","MapInstructions","numItems","showMessage","setShowMessage","okayHandler","localStorage","setItem","getItem","boxShadow","shadows","transform","connector","borderLeft","borderRight","borderTop","MapNeedsStatusPanel","isShowing","Grow","appear","in","mapContainer","noItems","MapView","handleSaveItem","containerRef","useRef","showUserStatus","setShowUserStatus","showUserStatusOnDrag","setShowUserStatusOnDrag","mapHeight","setMapHeight","mapWidth","setMapWidth","mapScale","setMapScale","mapScaleX","setMapScaleX","mapScaleY","setMapScaleY","windowSize","calculateNewLevel","posX","posY","absolutePosX","abs","absolutePosY","radiusAdjustment","distance","sqrt","maxDistance","CANVAS_WIDTH","handleCanvasBounds","pos","newPosX","newPosY","ITEM_SIZE","saveItem","toggleUserStatus","handleUserStatusOnDrag","isDragging","renderItem","imgEl","itemHeight","imageRatio","itemPosition","angle","random","cos","sin","getItemPosition","Fragment","stroke","strokeWidth","points","cornerRadius","offset","fill","scaleY","draggable","dragBoundFunc","onDragStart","children","setAttrs","shadowOffset","handleDragStartShadow","onDragEnd","duration","shadowOffsetX","shadowOffsetY","handleDragEndShadow","currentTarget","attrs","shadowColor","shadowBlur","shadowOpacity","current","offsetHeight","offsetWidth","ref","scaleX","offsetX","offsetY","radius","onMouseUp","onTap","appContainer","mainContainer","overflowY","loading","NEW_ITEM","App","setItems","currentItemIndex","setCurrentItemIndex","currentNavValue","setCurrentNavValue","isLoaded","setIsLoaded","itemData","updatedItems","indexOfUpdate","findIndex","table","update","deleteItem","indexOfItemToRemove","splice","delete","RenderDetails","useParams","editingItem","find","parseInt","toArray","then","storedItems","ThemeProvider","disableGutters","path","newItem","add","Boolean","location","hostname","match","ReactDOM","render","StrictMode","hashType","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.574d7d41.chunk.js","sourcesContent":["import Dexie from 'dexie';\n\nexport const tableName = 'items';\n\nconst db = new Dexie('MyQualityWorldDb');\ndb.version(1).stores({ items: '++id' });\n\nexport default db;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#404b78',\n    },\n    secondary: {\n      main: '#999999',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles((theme) => createStyles({\n  fab: {\n    bottom: theme.spacing(9),\n    color: 'white',\n    display: 'block',\n    position: 'fixed',\n    right: theme.spacing(2),\n  },\n}));\n\nexport default function AppAdd() {\n  const classes = useStyles();\n\n  return (\n    <Link to=\"/new\" className={classes.fab}>\n      <Fab color=\"primary\" aria-label=\"add\">\n        <AddIcon />\n      </Fab>\n    </Link>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  toolbar: {\n    justifyContent: 'space-between',\n  },\n  siteNameLink: {\n    color: 'white',\n    textDecoration: 'none',\n    '&:hover, &:link, &:visited, &:active': {\n      color: 'white',\n    },\n  },\n}));\n\nconst AppHeader = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\" component=\"header\">\n      <Toolbar className={classes.toolbar}>\n        <Link to=\"/\" className={classes.siteNameLink}>\n          <Typography variant=\"h6\" component=\"h1\">\n            My Quality World\n          </Typography>\n        </Link>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default AppHeader;\n","export const NEEDS = [\n  {\n    name: 'Survival',\n    shortName: 'Survival',\n    key: 'physiology',\n    colour: '#0277BD',\n    description: 'Basic physiological needs for food, shelter, safety and health.',\n  },\n  {\n    name: 'Love and Belonging',\n    shortName: 'Love',\n    key: 'loveAndBelonging',\n    colour: '#EC407A',\n    description: 'Relationships, social connections, to give and receive affection and to feel part of a group.',\n  },\n  {\n    name: 'Power',\n    shortName: 'Power',\n    key: 'power',\n    colour: '#263238',\n    description: 'Achievement, competence and skill, recognition. To be listened to and have a sense of worth.',\n  },\n  {\n    name: 'Fun',\n    shortName: 'Fun',\n    key: 'fun',\n    colour: '#FFA000',\n    description: 'To find pleasure, to play, to laugh and to learn.',\n  },\n  {\n    name: 'Freedom',\n    shortName: 'Freedom',\n    key: 'freedom',\n    colour: '#00C853',\n    description: 'Independence, autonomy and choice and to choose your direction in life.',\n  },\n];\n\nexport const MAX_FOR_ITEM = 5;\n\nexport const MAX_LEVEL = 10;\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { NEEDS } from 'utils/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column-reverse',\n  },\n  chart: {\n    backgroundColor: theme.palette.grey[200],\n    borderRadius: '2px',\n    height: '4px',\n    position: 'relative',\n  },\n  bar: {\n    borderRadius: '2px',\n    height: '4px',\n    left: 0,\n    position: 'absolute',\n    top: 0,\n  },\n}));\n\nconst ItemNeeds = (props) => {\n  const {\n    item,\n  } = props;\n\n  const classes = useStyles(props);\n\n  const calculateWidth = (value) => `${(value / 5) * 100}%`;\n\n  return (\n    <Grid container spacing={1}>\n      { NEEDS.map((need) => (\n        <Grid item xs key={`needs_item_values_${need.key}`} className={classes.container}>\n          <Typography variant=\"caption\" component=\"p\">\n            {need.shortName}\n          </Typography>\n          <div className={classes.chart}>\n            <div className={classes.background} />\n            <div\n              className={classes.bar}\n              style={{\n                backgroundColor: need.colour,\n                width: calculateWidth(item[need.key]),\n              }}\n            />\n          </div>\n        </Grid>\n      ))}\n    </Grid>\n\n  );\n};\n\nexport default ItemNeeds;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Container from '@material-ui/core/Container';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Typography from '@material-ui/core/Typography';\n\nimport ItemNeeds from 'components/ItemNeeds';\n\nconst useStyles = makeStyles((theme) => ({\n  itemImage: {\n    width: '100%',\n  },\n  card: {\n    backgroundColor: '#fff',\n    margin: [[theme.spacing(2), 'auto']],\n  },\n  untitled: {\n    color: '#999',\n  },\n  editAction: {\n    flexDirection: 'row-reverse',\n  },\n}));\n\nconst ItemCard = (props) => {\n  const {\n    item,\n  } = props;\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  const editItem = (itemId) => {\n    history.push(`/edit/${itemId}`);\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Card className={classes.card} raised>\n        { item.image && (\n          <img\n            src={item.image}\n            alt={`${item.name}`}\n            className={classes.itemImage}\n          />\n        )}\n        <CardContent>\n          <Typography gutterBottom variant=\"subtitle1\" component=\"h3\" className={!item.name ? classes.untitled : ''}>\n            {item.name || 'Untitled'}\n          </Typography>\n          <ItemNeeds item={item} />\n        </CardContent>\n        <CardActions className={classes.editAction}>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => {\n              editItem(item.id);\n            }}\n            startIcon={<EditIcon />}\n          >\n            Edit\n          </Button>\n        </CardActions>\n      </Card>\n    </Container>\n  );\n};\n\nexport default ItemCard;\n","import React, { useState } from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport { virtualize } from 'react-swipeable-views-utils';\nimport { mod } from 'react-swipeable-views-core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport Typography from '@material-ui/core/Typography';\n\nimport ItemCard from 'components/ItemCard';\n\nconst useStyles = makeStyles((theme) => ({\n  previousButton: {\n    background: 'rgba(255,255,255,0.7)',\n    borderRadius: '50%',\n    left: 0,\n    position: 'absolute',\n    top: '100px',\n    zIndex: 10,\n    [theme.breakpoints.up('sm')]: {\n      top: '200px',\n    },\n  },\n  nextButton: {\n    background: 'rgba(255,255,255,0.7)',\n    borderRadius: '50%',\n    position: 'absolute',\n    right: 0,\n    top: '100px',\n    zIndex: 10,\n    [theme.breakpoints.up('sm')]: {\n      top: '200px',\n    },\n  },\n  buttonHide: {\n    display: 'none',\n  },\n  noCards: {\n    alignItems: 'center',\n    display: 'flex',\n    flexBasis: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    padding: [[0, theme.spacing(2), theme.spacing(4)]],\n    textAlign: 'center',\n  },\n}));\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\nconst ItemCards = (props) => {\n  const {\n    items,\n    itemIndex,\n  } = props;\n\n  const classes = useStyles();\n  const [currentIndex, setCurrentIndex] = useState(itemIndex);\n  const [isSliding, setIsSliding] = useState(false);\n\n  const updateIndex = (newIndex) => {\n    setCurrentIndex(newIndex);\n  };\n\n  const slideRenderer = ({ key, index }) => (\n    <ItemCard key={`card_${key}`} item={items[mod(index, items.length)]} />\n  );\n\n  if (!items.length) {\n    return (\n      <div className={classes.noCards}>\n        <Typography variant=\"body1\" component=\"p\">\n          Your Quality World images will be shown here as cards that you can swipe through...\n        </Typography>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <VirtualizeSwipeableViews\n        index={currentIndex}\n        onChangeIndex={updateIndex}\n        enableMouseEvents\n        disabled={items.length <= 1}\n        onSwitching={() => {\n          setIsSliding(true);\n        }}\n        onTransitionEnd={() => {\n          setIsSliding(false);\n        }}\n        slideRenderer={slideRenderer}\n      />\n      {items.length > 1 && (\n        <>\n          <div className={isSliding ? classes.buttonHide : classes.previousButton}>\n            <IconButton\n              aria-label=\"Previous\"\n              color=\"primary\"\n              onClick={() => {\n                setCurrentIndex(currentIndex - 1);\n              }}\n            >\n              <KeyboardArrowLeftIcon />\n            </IconButton>\n          </div>\n          <div className={isSliding ? classes.buttonHide : classes.nextButton}>\n            <IconButton\n              aria-label=\"Next\"\n              color=\"primary\"\n              onClick={() => {\n                setCurrentIndex(currentIndex + 1);\n              }}\n            >\n              <KeyboardArrowRightIcon />\n            </IconButton>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ItemCards;\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ViewCarouselIcon from '@material-ui/icons/ViewCarousel';\n\nconst AppNav = (props) => {\n  const {\n    navValue,\n    navChangeHandler,\n  } = props;\n\n  return (\n    <BottomNavigation showLabels component=\"nav\" value={navValue}>\n      <BottomNavigationAction\n        component={Link}\n        to=\"/\"\n        label=\"Home\"\n        value=\"home\"\n        selected={navValue === 'home'}\n        icon={<PersonIcon />}\n        onClick={() => navChangeHandler('home')}\n      />\n      <BottomNavigationAction\n        component={Link}\n        to=\"/cards\"\n        label=\"Cards\"\n        value=\"cards\"\n        selected={navValue === 'cards'}\n        icon={<ViewCarouselIcon />}\n        onClick={() => navChangeHandler('cards')}\n      />\n      <BottomNavigationAction\n        component={Link}\n        to=\"/map\"\n        label=\"Map\"\n        value=\"map\"\n        selected={navValue === 'map'}\n        icon={<AccountTreeIcon />}\n        onClick={() => navChangeHandler('map')}\n      />\n    </BottomNavigation>\n  );\n};\n\nexport default AppNav;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    textAlign: 'center',\n  },\n  divider: {\n    margin: [[theme.spacing(2), 'auto']],\n    maxWidth: '300px',\n  },\n}));\n\nconst BlankState = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <Typography variant=\"body1\" component=\"p\" gutterBottom>\n        Let&apos;s get started by adding some items to your quality world.\n      </Typography>\n      <Typography variant=\"body1\" component=\"p\" gutterBottom>\n        You can add as many as you like, but try and start with at least a few.\n      </Typography>\n      <Divider className={classes.divider} />\n      <Typography variant=\"body1\" component=\"p\" gutterBottom>\n        Click the big plus button in the bottom corner to add your first item.\n      </Typography>\n    </div>\n  );\n};\n\nexport default BlankState;\n","import React from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  circleContainer: {\n    position: 'relative',\n  },\n  background: {\n    color: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  value: {\n    animationDuration: '550ms',\n    position: 'absolute',\n    left: 0,\n  },\n  valueCircle: {\n    strokeLinecap: 'round',\n    color: ({ colour }) => colour,\n  },\n  outerContainer: {\n    display: 'inline-flex',\n  },\n  label: {\n    display: 'block',\n    fontSize: ({ type }) => (type === 'mini' ? '0.6rem' : '0.75rem'),\n  },\n}));\n\nconst NeedsChart = (props) => {\n  const {\n    value,\n    label,\n    // eslint-disable-next-line no-unused-vars\n    colour,\n    type,\n    hideValue,\n  } = props;\n\n  const classes = useStyles(props);\n\n  return (\n    <>\n      <Box position=\"relative\" className={classes.outerContainer}>\n        <div className={classes.circleContainer}>\n          <CircularProgress\n            variant=\"static\"\n            value={100}\n            size={type === 'mini' ? 20 : 60}\n            thickness={4}\n            className={classes.background}\n          />\n          <CircularProgress\n            variant=\"static\"\n            value={value}\n            size={type === 'mini' ? 20 : 60}\n            thickness={4}\n            className={classes.value}\n            classes={{\n              circle: classes.valueCircle,\n            }}\n          />\n        </div>\n        { !hideValue && (\n          <Box\n            top={0}\n            left={0}\n            bottom={0}\n            right={0}\n            position=\"absolute\"\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">\n              {`${Math.round(value)}%`}\n            </Typography>\n          </Box>\n        )}\n      </Box>\n      {label && (\n        <Typography variant=\"caption\" className={classes.label}>\n          {label}\n        </Typography>\n      )}\n    </>\n  );\n};\n\nexport default NeedsChart;\n","import {\n  MAX_FOR_ITEM,\n  MAX_LEVEL,\n} from './constants';\n\nconst calculateNeedMetPercent = (need, items) => {\n  const itemsCheck = [...items];\n  if (!itemsCheck.length) {\n    return 0;\n  }\n  const maxForNeed = itemsCheck.length * MAX_FOR_ITEM * MAX_LEVEL;\n  let needScore = 0;\n  itemsCheck.forEach((item) => {\n    needScore += (item[need] || 0) * item.level;\n  });\n  needScore = Math.min((needScore / maxForNeed) * 100, 100);\n  if (needScore < 0) {\n    needScore = 0;\n  }\n  return needScore;\n};\n\nexport default calculateNeedMetPercent;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport BlankState from 'components/BlankState';\nimport NeedsChart from 'components/NeedsChart';\nimport calculateNeedMetPercent from 'utils/calculateNeedMetPercent';\nimport { NEEDS } from 'utils/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: `calc(100% - ${theme.spacing(4)}px)`,\n    margin: [[theme.spacing(2), 'auto']],\n    textAlign: 'center',\n    [theme.breakpoints.up('sm')]: {\n      justifyContent: 'center',\n    },\n  },\n  needsContainer: {\n    margin: [[theme.spacing(2), 'auto', 0]],\n  },\n}));\n\nconst Home = (props) => {\n  const {\n    items,\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"md\" className={classes.container}>\n      <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n        Welcome\n      </Typography>\n      { items.length ? (\n        <>\n          <Typography variant=\"body1\" component=\"p\" gutterBottom>\n            You have\n            { items.length === 1 ? (\n              ' 1 item '\n            ) : (\n              ` ${items.length} items `\n            )}\n            in your quality world.\n          </Typography>\n          <Typography variant=\"body1\" component=\"p\" gutterBottom>\n            Here is an overview of how your quality world is meeting your needs.\n          </Typography>\n          <div className={classes.needsContainer}>\n            <Grid container spacing={3}>\n              { NEEDS.map((need) => (\n                <Grid item xs key={`need_score_${need.key}`}>\n                  <NeedsChart\n                    value={calculateNeedMetPercent(need.key, items)}\n                    label={need.name}\n                    colour={need.colour}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          </div>\n        </>\n      ) : (\n        <BlankState />\n      )}\n    </Container>\n  );\n};\n\nexport default Home;\n","/**\n * NB: This file was adapted from the example code at:\n * https://github.com/ricardo-ch/react-easy-crop\n * (see https://codesandbox.io/s/y09komm059)\n */\n\nconst createImage = (url) => (\n  new Promise((resolve, reject) => {\n    const imageEl = new Image();\n    imageEl.addEventListener('load', () => resolve(imageEl));\n    imageEl.addEventListener('error', (error) => reject(error));\n    imageEl.src = url;\n  })\n);\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180;\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0, resizeOptions) {\n  const imageEl = await createImage(imageSrc);\n  const canvasEl = document.createElement('canvas');\n  const ctx = canvasEl.getContext('2d');\n\n  const safeArea = Math.max(imageEl.width, imageEl.height) * 2;\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvasEl.width = safeArea;\n  canvasEl.height = safeArea;\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2);\n  ctx.rotate(getRadianAngle(rotation));\n  ctx.translate(-safeArea / 2, -safeArea / 2);\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    imageEl,\n    safeArea / 2 - imageEl.width * 0.5,\n    safeArea / 2 - imageEl.height * 0.5,\n  );\n  const data = ctx.getImageData(0, 0, safeArea, safeArea);\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvasEl.width = pixelCrop.width;\n  canvasEl.height = pixelCrop.height;\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    0 - safeArea / 2 + imageEl.width * 0.5 - pixelCrop.x,\n    0 - safeArea / 2 + imageEl.height * 0.5 - pixelCrop.y,\n  );\n\n  if (resizeOptions) {\n    const imgToResize = await createImage(canvasEl.toDataURL('image/jpeg'));\n    imgToResize.width = resizeOptions.width;\n    canvasEl.width = resizeOptions.width;\n    canvasEl.height = resizeOptions.width * (1 / resizeOptions.aspect);\n    ctx.drawImage(imgToResize, 0, 0, 800, 600);\n  }\n\n  return canvasEl.toDataURL('image/jpeg');\n}\n","import React, { useState, useCallback } from 'react';\nimport Cropper from 'react-easy-crop';\n\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Container from '@material-ui/core/Container';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\n\nimport getCroppedImg from './cropImage';\n\nconst ASPECT = 4 / 3;\nconst WIDTH = 800;\n\nconst useStyles = makeStyles((theme) => createStyles({\n  fileInput: {\n    display: 'none',\n  },\n  upload: {\n    marginTop: theme.spacing(1),\n  },\n  uploadContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    margin: [[theme.spacing(2), 0]],\n  },\n  cropContainer: {\n    backgroundColor: '#fff',\n    flex: [[1, 0, '220px']],\n    marginTop: theme.spacing(1),\n    position: 'relative',\n  },\n  zoomControls: {\n    padding: theme.spacing(1),\n  },\n  actions: {\n    padding: theme.spacing(1),\n  },\n  loadingBackdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport default function AppAdd(props) {\n  const {\n    saveHandler,\n  } = props;\n\n  const classes = useStyles();\n  const [fileUpload, setFileUpload] = useState();\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState();\n  const [isCropping, setIsCropping] = useState(false);\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n\n  const onCropComplete = useCallback((croppedArea, currentCroppedAreaPixels) => {\n    setCroppedAreaPixels(currentCroppedAreaPixels);\n  }, []);\n\n  const handleImageSelection = (event) => {\n    const fileReader = new FileReader();\n    const file = event.target.files[0];\n    fileReader.onload = (upload) => {\n      setFileUpload(upload.target.result);\n    };\n    fileReader.readAsDataURL(file);\n  };\n\n  const cancelImage = () => {\n    setFileUpload(null);\n  };\n\n  const cropImageAndSave = async () => {\n    setIsCropping(true);\n    const imgToSave = await getCroppedImg(\n      fileUpload,\n      croppedAreaPixels,\n      0,\n      {\n        width: WIDTH,\n        aspect: ASPECT,\n      },\n    );\n    setIsCropping(false);\n    saveHandler(imgToSave);\n  };\n\n  return (\n    <>\n      <Container maxWidth=\"sm\">\n        <div className={classes.uploadContainer}>\n          { !fileUpload && (\n            <>\n              <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                Select a photo to add to your quality world.\n              </Typography>\n              <label htmlFor=\"file_upload\" className={classes.upload}>\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                  Select Photo\n                </Button>\n                <input\n                  accept=\"image/*\"\n                  className={classes.fileInput}\n                  id=\"file_upload\"\n                  type=\"file\"\n                  onChange={handleImageSelection}\n                  encType=\"multipart/form-data\"\n                />\n              </label>\n            </>\n          )}\n          { fileUpload && (\n            <>\n              <div>\n                <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                  Now you can crop and move your photo so that it fits\n                  nicely in the box.\n                </Typography>\n              </div>\n              <div className={classes.cropContainer}>\n                <Cropper\n                  image={fileUpload}\n                  crop={crop}\n                  zoom={zoom}\n                  aspect={ASPECT}\n                  onCropChange={setCrop}\n                  onCropComplete={onCropComplete}\n                  onZoomChange={setZoom}\n                />\n              </div>\n              <div className={classes.zoomControls}>\n                <Slider\n                  value={zoom}\n                  min={1}\n                  max={3}\n                  step={0.1}\n                  aria-labelledby=\"Zoom\"\n                  onChange={(e, newZoom) => setZoom(newZoom)}\n                />\n              </div>\n              <div className={classes.actions}>\n                <Button variant=\"contained\" color=\"primary\" onClick={cropImageAndSave}>\n                  Okay\n                </Button>\n                <Button onClick={cancelImage}>\n                  Cancel\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n      </Container>\n      <Backdrop className={classes.loadingBackdrop} open={isCropping}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </>\n  );\n}\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\n\nconst ConfirmDelete = (props) => {\n  const {\n    deleteHandler,\n    isOpen,\n    closeHandler,\n  } = props;\n\n  return (\n    <Dialog\n      maxWidth=\"xs\"\n      aria-labelledby=\"confirmation-delete-title\"\n      open={isOpen}\n      onClose={closeHandler}\n    >\n      <DialogTitle id=\"confirmation-delete-title\">Delete this item?</DialogTitle>\n      <DialogContent dividers>\n        <Typography variant=\"body2\" component=\"p\" gutterBottom>\n          Are you sure you want to remove this item from your quality world?\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Deleting an item is permanent...\n          But of course, you can always add it back in as a new item.\n          You can do whatever you want.\n          It is your quality world after all.\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={closeHandler} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={deleteHandler} color=\"primary\">\n          Ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ConfirmDelete;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\n\nimport { MAX_FOR_ITEM } from 'utils/constants';\n\nconst MAX = MAX_FOR_ITEM;\nconst MIN = 0;\nconst STEP = 0.1;\n\nconst useStyles = makeStyles(() => ({\n  sliderGridItem: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nconst ItemDetailsSlider = (props) => {\n  const {\n    propertyName,\n    label,\n    currentValue,\n    changeHandler,\n    colour,\n    description,\n  } = props;\n\n  const classes = useStyles();\n\n  const handleValueChange = (event, newValue) => {\n    changeHandler(propertyName, newValue);\n  };\n\n  const increaseValue = () => {\n    if (currentValue < MAX) {\n      changeHandler(propertyName, currentValue + STEP);\n    }\n  };\n\n  const decreaseValue = () => {\n    if (currentValue > MIN) {\n      changeHandler(propertyName, currentValue - STEP);\n    }\n  };\n\n  return (\n    <div style={{ marginTop: '1em', marginBottom: '1em' }}>\n      <Typography id={`strength-${propertyName}`}>\n        {label}\n      </Typography>\n      <Typography variant=\"caption\">\n        {description}\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item>\n          <IconButton aria-label=\"Less\" onClick={decreaseValue} disabled={currentValue <= MIN}>\n            <RemoveIcon />\n          </IconButton>\n        </Grid>\n        <Grid item xs className={classes.sliderGridItem}>\n          <Slider\n            value={currentValue}\n            min={MIN}\n            max={MAX}\n            step={STEP}\n            onChange={handleValueChange}\n            style={{ color: colour }}\n            aria-labelledby={`strength-${propertyName}`}\n          />\n        </Grid>\n        <Grid item>\n          <IconButton aria-label=\"More\" onClick={increaseValue} disabled={currentValue >= MAX}>\n            <AddIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ItemDetailsSlider;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport ConfirmDelete from 'components/ConfirmDelete';\nimport ItemDetailsSlider from 'components/ItemDetailsSlider';\nimport { NEEDS } from 'utils/constants';\n\nconst useStyles = makeStyles((theme) => createStyles({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  field: {\n    width: '100%',\n  },\n  itemImage: {\n    maxWidth: '100%',\n  },\n  container: {\n    marginBottom: theme.spacing(3),\n    marginTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n    [theme.breakpoints.down('xs')]: {\n      marginBottom: 0,\n      marginTop: 0,\n      paddingBottom: theme.spacing(2),\n      paddingTop: theme.spacing(2),\n    },\n  },\n  imageGrid: {\n    marginBottom: theme.spacing(2),\n  },\n  actionDivider: {\n    marginTop: theme.spacing(2),\n  },\n  actionArea: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: theme.spacing(2),\n  },\n  deleteButton: {\n    color: theme.palette.error.dark,\n  },\n}));\n\nconst ItemDetails = (props) => {\n  const {\n    saveHandler,\n    deleteHandler,\n    item,\n  } = props;\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [thisItem, setThisItem] = useState(item);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const handleChange = (event) => {\n    setThisItem({\n      ...thisItem,\n      name: event.target.value,\n    });\n  };\n\n  const handleSliderChange = (propertyName, newValue) => {\n    const updatedItem = {\n      ...thisItem,\n    };\n    updatedItem[propertyName] = newValue;\n    setThisItem(updatedItem);\n  };\n\n  const saveAndGo = () => {\n    saveHandler(thisItem);\n    history.push('/cards');\n  };\n\n  const doDelete = () => {\n    deleteHandler(item.id);\n    history.push('/cards');\n  };\n\n  const closeConfirmDelete = () => {\n    setIsDeleting(false);\n  };\n\n  useEffect(() => {\n    setThisItem(item);\n  }, [item]);\n\n  return (\n    <Container maxWidth=\"sm\" className={classes.container}>\n      <Grid container spacing={2} className={classes.imageGrid}>\n        <Grid item sm={4} xs={12}>\n          { item.image && (\n            <img\n              src={item.image}\n              alt={`${item.name}`}\n              className={classes.itemImage}\n            />\n          )}\n        </Grid>\n        <Grid item sm={8} xs={12}>\n          <TextField\n            label=\"Item name\"\n            value={thisItem.name}\n            onChange={handleChange}\n            className={classes.field}\n            placeholder=\"Untitled\"\n            variant=\"outlined\"\n          />\n        </Grid>\n      </Grid>\n      <Typography variant=\"body2\" component=\"p\" gutterBottom>\n        Use the sliders below to indicate how this quality world image satisfies your needs.\n      </Typography>\n      {NEEDS.map((need) => (\n        <ItemDetailsSlider\n          propertyName={need.key}\n          label={need.name}\n          currentValue={thisItem[need.key]}\n          changeHandler={handleSliderChange}\n          key={`slider_${need.key}`}\n          colour={need.colour}\n          description={need.description}\n        />\n      ))}\n      <Divider className={classes.actionDivider} />\n      <div className={classes.actionArea}>\n        <Button\n          onClick={saveAndGo}\n          color=\"primary\"\n          startIcon={<SaveIcon />}\n          variant=\"contained\"\n        >\n          Save\n        </Button>\n        <Button\n          size=\"small\"\n          className={classes.deleteButton}\n          onClick={() => {\n            setIsDeleting(true);\n          }}\n          startIcon={<DeleteIcon />}\n        >\n          Delete\n        </Button>\n      </div>\n      <ConfirmDelete\n        isOpen={isDeleting}\n        deleteHandler={doDelete}\n        closeHandler={closeConfirmDelete}\n      />\n    </Container>\n  );\n};\n\nItemDetails.defaultProps = {\n  item: {\n    name: '',\n    physiology: 0,\n    loveAndBelonging: 0,\n    power: 0,\n    fun: 0,\n    freedom: 0,\n    level: 0,\n    id: 0,\n  },\n};\n\nexport default ItemDetails;\n","import { useState, useEffect } from 'react';\n\nconst getSize = () => ({\n  width: window.innerWidth\n    || document.documentElement.clientWidth\n    || document.body.clientWidth,\n  height: window.innerHeight\n    || document.documentElement.clientHeight\n    || document.body.clientHeight,\n});\n\nconst useWindowResize = () => {\n  // save current window width in the state object\n  const [size, setSize] = useState(getSize());\n\n  useEffect(() => {\n    let timeoutId = null;\n    const resizeListener = () => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => setSize(getSize()), 300);\n    };\n    window.addEventListener('resize', resizeListener);\n\n    return () => {\n      window.removeEventListener('resize', resizeListener);\n    };\n  }, []);\n\n  return size;\n};\n\nexport default useWindowResize;\n","import React, { useEffect, useState } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\n\nconst messageConfirmationKey = 'mqw_maps';\n\nconst MapInstructions = (props) => {\n  const {\n    numItems,\n  } = props;\n\n  const [showMessage, setShowMessage] = useState(false);\n\n  const okayHandler = () => {\n    setShowMessage(false);\n    localStorage.setItem(messageConfirmationKey, 'true');\n  };\n\n  useEffect(() => {\n    setShowMessage(!localStorage.getItem(messageConfirmationKey));\n  }, []);\n\n  if (!numItems) {\n    return null;\n  }\n\n  return (\n    <Dialog\n      maxWidth=\"xs\"\n      aria-labelledby=\"instructions-message\"\n      open={showMessage}\n      onClose={okayHandler}\n    >\n      <DialogContent>\n        <Typography variant=\"body2\" component=\"p\" gutterBottom>\n          Move items closer or further away from the centre depending on how big a part they\n          are playing in your life right now.\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Tap on the centre icon to show or hide the needs satisfaction charts.\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={okayHandler} color=\"primary\">\n          Got it\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default MapInstructions;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Grow } from '@material-ui/core';\n\nimport NeedsChart from 'components/NeedsChart';\nimport calculateNeedMetPercent from 'utils/calculateNeedMetPercent';\nimport { NEEDS } from 'utils/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    backgroundColor: '#fff',\n    borderRadius: '5px',\n    bottom: 'calc(50% + 40px)',\n    boxShadow: theme.shadows[6],\n    left: 'calc(50% - 136px)',\n    padding: '10px',\n    position: 'absolute',\n    textAlign: 'center',\n    transform: 'translateX(-50%)',\n    width: '250px',\n  },\n  connector: {\n    bottom: '-10px',\n    display: 'block',\n    width: 0,\n    height: 0,\n    borderLeft: '10px solid transparent',\n    borderRight: '10px solid transparent',\n    borderTop: '10px solid #fff',\n    left: 'calc(50% - 10px)',\n    position: 'absolute',\n  },\n}));\n\nconst MapNeedsStatusPanel = (props) => {\n  const {\n    items,\n    isShowing,\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Grow\n      appear\n      in={isShowing}\n    >\n      <div className={classes.container}>\n        <Grid container spacing={1}>\n          { NEEDS.map((need) => (\n            <Grid item xs key={`need_score_${need.key}`}>\n              <NeedsChart\n                value={calculateNeedMetPercent(need.key, items)}\n                colour={need.colour}\n                type=\"mini\"\n                label={need.shortName}\n                hideValue\n              />\n            </Grid>\n          ))}\n        </Grid>\n        <div className={classes.connector} />\n      </div>\n    </Grow>\n  );\n};\n\nexport default MapNeedsStatusPanel;\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport {\n  Stage,\n  Layer,\n  Circle,\n  Rect,\n  Image,\n  Group,\n  Line,\n} from 'react-konva';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport useWindowResize from 'utils/useWindowResize';\nimport MapInstructions from 'components/MapInstructions';\nimport MapNeedsStatusPanel from 'components/MapNeedsStatusPanel';\nimport { MAX_LEVEL } from 'utils/constants';\nimport Typography from '@material-ui/core/Typography';\n\nconst CANVAS_HEIGHT = 1000;\nconst CANVAS_WIDTH = 1000;\nconst ITEM_SIZE = 100;\n\nconst useStyles = makeStyles((theme) => ({\n  mapContainer: {\n    display: 'flex',\n    height: '100%',\n    width: '100%',\n  },\n  map: {\n    position: 'relative',\n  },\n  noItems: {\n    left: 0,\n    padding: [[theme.spacing(4), theme.spacing(2), theme.spacing(2)]],\n    position: 'absolute',\n    right: 0,\n    textAlign: 'center',\n  },\n}));\n\nconst MapView = (props) => {\n  const {\n    items,\n    handleSaveItem,\n  } = props;\n\n  const classes = useStyles();\n  const containerRef = useRef();\n  const [showUserStatus, setShowUserStatus] = useState(true);\n  const [showUserStatusOnDrag, setShowUserStatusOnDrag] = useState(true);\n  const [mapHeight, setMapHeight] = useState(300);\n  const [mapWidth, setMapWidth] = useState(300);\n  const [mapScale, setMapScale] = useState(1);\n  const [mapScaleX, setMapScaleX] = useState(1);\n  const [mapScaleY, setMapScaleY] = useState(1);\n  const windowSize = useWindowResize();\n\n  const calculateNewLevel = (posX, posY) => {\n    const absolutePosX = Math.abs(posX);\n    const absolutePosY = Math.abs(posY);\n    const radiusAdjustment = ITEM_SIZE * mapScale;\n    const distance = Math.sqrt(absolutePosX ** 2 + absolutePosY ** 2) * mapScale - radiusAdjustment;\n    const maxDistance = Math.sqrt((CANVAS_WIDTH / 2) ** 2 * 2) * mapScale - radiusAdjustment * 2;\n    const level = Math.min((1 - (distance / maxDistance)) * 10, MAX_LEVEL);\n    return level;\n  };\n\n  const handleDragStartShadow = (event) => {\n    event.target.children[0].setAttrs({\n      shadowOffset: {\n        x: 15,\n        y: 15,\n      },\n    });\n  };\n\n  const handleDragEndShadow = (event) => {\n    event.target.children[0].to({\n      duration: 0.2,\n      shadowOffsetX: 5,\n      shadowOffsetY: 5,\n    });\n  };\n\n  const handleCanvasBounds = (pos) => {\n    let newPosX = pos.x;\n    let newPosY = pos.y;\n    if (pos.x - (ITEM_SIZE / 2) * mapScaleX <= 0) {\n      newPosX = (ITEM_SIZE / 2) * mapScaleX;\n    } else if (pos.x + (ITEM_SIZE / 2) * mapScaleX >= CANVAS_WIDTH * mapScaleX) {\n      newPosX = CANVAS_WIDTH * mapScaleX - (ITEM_SIZE / 2) * mapScaleX;\n    }\n    if (pos.y - (ITEM_SIZE / 2) * mapScaleY <= 0) {\n      newPosY = (ITEM_SIZE / 2) * mapScaleY;\n    } else if (pos.y + (ITEM_SIZE / 2) * mapScaleY >= CANVAS_HEIGHT * mapScaleY) {\n      newPosY = CANVAS_HEIGHT * mapScaleY - (ITEM_SIZE / 2) * mapScaleY;\n    }\n    return {\n      x: newPosX,\n      y: newPosY,\n    };\n  };\n\n  const saveItem = (item, position) => {\n    const updatedItem = {\n      ...item,\n      posX: position.x,\n      posY: position.y,\n      level: calculateNewLevel(position.x, position.y),\n    };\n    handleSaveItem(updatedItem);\n  };\n\n  const toggleUserStatus = () => {\n    if (!items.length) {\n      return;\n    }\n    setShowUserStatus(!showUserStatus);\n  };\n\n  const handleUserStatusOnDrag = (isDragging) => {\n    if (showUserStatus) {\n      setShowUserStatusOnDrag(!isDragging);\n    }\n  };\n\n  const getItemPosition = (item) => {\n    if (item.posX && item.posY) {\n      return {\n        x: item.posX,\n        y: item.posY,\n      };\n    }\n    const angle = Math.random() * Math.PI * 2;\n    const radiusFromCentre = 300;\n    const position = {\n      x: Math.cos(angle) * radiusFromCentre,\n      y: Math.sin(angle) * radiusFromCentre,\n    };\n    saveItem(item, position);\n    return position;\n  };\n\n  const renderItem = (item) => {\n    const imgEl = document.createElement('img');\n    imgEl.src = item.image;\n    const itemHeight = item.imageRatio * ITEM_SIZE * mapScaleX;\n    const itemPosition = getItemPosition(item);\n    return (\n      <React.Fragment key={`map_item_${item.id}`}>\n        <Line\n          stroke=\"#ccc\"\n          strokeWidth={2}\n          points={[\n            0,\n            0,\n            itemPosition.x,\n            itemPosition.y,\n          ]}\n        />\n        <Rect\n          cornerRadius={4}\n          x={itemPosition.x}\n          y={itemPosition.y}\n          offset={{\n            x: (ITEM_SIZE / 2) - 2,\n            y: (itemHeight / 2) - 2,\n          }}\n          width={ITEM_SIZE - 4}\n          height={itemHeight - 4}\n          fill=\"#ccc\"\n          scaleY={1 / mapScaleY}\n        />\n        <Group\n          draggable\n          dragBoundFunc={handleCanvasBounds}\n          onDragStart={(event) => {\n            handleDragStartShadow(event);\n            handleUserStatusOnDrag(true);\n          }}\n          onDragEnd={(event) => {\n            handleDragEndShadow(event);\n            saveItem(item, {\n              x: event.currentTarget.attrs.x,\n              y: event.currentTarget.attrs.y,\n            });\n            handleUserStatusOnDrag(false);\n          }}\n          x={itemPosition.x}\n          y={itemPosition.y}\n          offset={{\n            x: ITEM_SIZE / 2,\n            y: itemHeight / 2,\n          }}\n          width={ITEM_SIZE}\n          height={itemHeight}\n          scaleY={1 / mapScaleY}\n        >\n          <Rect\n            shadowColor=\"black\"\n            shadowBlur={10}\n            shadowOpacity={0.3}\n            width={ITEM_SIZE - 2}\n            height={itemHeight - 2}\n            fill=\"#000\"\n            offset={{\n              x: -1,\n              y: -1,\n            }}\n          />\n          <Image\n            image={imgEl}\n            width={ITEM_SIZE}\n            height={itemHeight}\n          />\n        </Group>\n      </React.Fragment>\n    );\n  };\n\n  const setUpForDraw = () => {\n    setMapHeight(containerRef.current.offsetHeight);\n    setMapWidth(containerRef.current.offsetWidth);\n    setMapScale(Math.min(\n      containerRef.current.offsetWidth / CANVAS_WIDTH,\n      containerRef.current.offsetHeight / CANVAS_HEIGHT,\n    ));\n    setMapScaleX(containerRef.current.offsetWidth / CANVAS_WIDTH);\n    setMapScaleY(containerRef.current.offsetHeight / CANVAS_HEIGHT);\n  };\n\n  useEffect(() => {\n    setUpForDraw();\n  }, [windowSize.width, windowSize.height]);\n\n  return (\n    <div className={classes.mapContainer} ref={containerRef}>\n      <Stage\n        height={mapHeight}\n        width={mapWidth}\n        className={classes.map}\n        scaleX={mapScaleX}\n        scaleY={mapScaleY}\n      >\n        <Layer\n          offsetX={-CANVAS_WIDTH / 2}\n          offsetY={-CANVAS_HEIGHT / 2}\n        >\n          {items.map((item) => renderItem(item))}\n        </Layer>\n        <Layer\n          offsetX={-CANVAS_WIDTH / 2}\n          offsetY={-CANVAS_HEIGHT / 2}\n        >\n          <Circle\n            fill=\"#fff\"\n            radius={(ITEM_SIZE * mapScale) / 2}\n            x={0}\n            y={0}\n            shadowColor=\"black\"\n            shadowBlur={10}\n            shadowOpacity={0.3}\n            scaleX={1 / mapScaleX}\n            scaleY={1 / mapScaleY}\n          />\n          <Circle\n            fill=\"#333\"\n            radius={(ITEM_SIZE * mapScale) / 6}\n            x={0}\n            y={-30 * mapScale}\n            scaleX={1 / mapScaleX}\n            scaleY={1 / mapScaleY}\n          />\n          <Rect\n            cornerRadius={2}\n            width={(ITEM_SIZE / 2) * mapScale}\n            height={(ITEM_SIZE / 4) * mapScale}\n            fill=\"#333\"\n            scaleX={1 / mapScaleX}\n            scaleY={1 / mapScaleY}\n            x={0}\n            y={10 * mapScale}\n            offsetX={(ITEM_SIZE / 4) * mapScale}\n          />\n          <Circle\n            fill=\"transparent\"\n            radius={(ITEM_SIZE * mapScale) / 2}\n            x={0}\n            y={0}\n            scaleX={1 / mapScaleX}\n            scaleY={1 / mapScaleY}\n            onMouseUp={toggleUserStatus}\n            onTap={toggleUserStatus}\n          />\n        </Layer>\n      </Stage>\n      <MapInstructions\n        numItems={items.length}\n      />\n      {items.length ? (\n        <MapNeedsStatusPanel\n          items={items}\n          isShowing={showUserStatus && showUserStatusOnDrag}\n        />\n      ) : (\n        <div className={classes.noItems}>\n          <Typography variant=\"body1\" component=\"p\">\n            Your Quality World images will be shown here as items\n            that you can move around and organise...\n          </Typography>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MapView;\n","import React, { useState, useEffect } from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport {\n  Route,\n  Switch,\n  useParams,\n  useHistory,\n} from 'react-router-dom';\n\nimport db, { tableName } from 'utils/db';\nimport theme from 'utils/muiTheme';\nimport AppAdd from 'components/AppAdd';\nimport AppHeader from 'components/AppHeader';\nimport ItemCards from 'components/ItemCards';\nimport AppNav from 'components/AppNav';\nimport Home from 'components/Home';\nimport ItemAdd from 'components/ItemAdd';\nimport ItemDetails from 'components/ItemDetails';\nimport MapView from 'components/MapView';\n\nconst useStyles = makeStyles(() => ({\n  appContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    justifyContent: 'space-between',\n  },\n  mainContainer: {\n    flexBasis: '100%',\n    overflowY: 'auto',\n    position: 'relative',\n  },\n  loading: {\n    color: theme.palette.grey[500],\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    textAlign: 'center',\n    top: '30%',\n  },\n}));\n\nconst NEW_ITEM = {\n  name: '',\n  image: null,\n  physiology: 0,\n  loveAndBelonging: 0,\n  power: 0,\n  fun: 0,\n  freedom: 0,\n  level: 5,\n};\n\nconst App = () => {\n  const classes = useStyles();\n  const [items, setItems] = useState([]);\n  const [currentItemIndex, setCurrentItemIndex] = useState(0);\n  const [currentNavValue, setCurrentNavValue] = useState('');\n  const [isLoaded, setIsLoaded] = useState(false);\n  const history = useHistory();\n\n  const addItem = (itemData) => {\n    const newItem = {\n      ...NEW_ITEM,\n      image: itemData,\n      imageRatio: 3 / 4, // TODO: Do this better\n      name: '',\n    };\n    db.table(tableName)\n      .add(newItem)\n      .then((id) => {\n        setItems([\n          ...items,\n          {\n            ...newItem,\n            id,\n          },\n        ]);\n        setCurrentItemIndex(items.length);\n        history.push(`/edit/${id}`);\n      });\n  };\n\n  const saveItem = (itemData) => {\n    const updatedItems = [\n      ...items,\n    ];\n    const indexOfUpdate = updatedItems.findIndex((item) => item.id === itemData.id);\n    updatedItems[indexOfUpdate] = itemData;\n    setItems(updatedItems);\n    setCurrentItemIndex(indexOfUpdate);\n    db.table(tableName).update(itemData.id, itemData);\n  };\n\n  const deleteItem = (itemId) => {\n    const updatedItems = [\n      ...items,\n    ];\n    const indexOfItemToRemove = updatedItems.findIndex((item) => item.id === itemId);\n    updatedItems.splice(indexOfItemToRemove, 1);\n    setItems(updatedItems);\n    setCurrentItemIndex(0);\n    db.table(tableName).delete(itemId);\n  };\n\n  const RenderDetails = () => {\n    const { itemId } = useParams();\n    const editingItem = items.find((item) => item.id === parseInt(itemId, 10));\n    if (editingItem) {\n      return (\n        <ItemDetails\n          saveHandler={saveItem}\n          deleteHandler={deleteItem}\n          item={editingItem}\n        />\n      );\n    }\n    return (\n      <p>That item does not exist...</p>\n    );\n  };\n\n  useEffect(() => {\n    db.table(tableName)\n      .toArray()\n      .then((storedItems) => {\n        setIsLoaded(true);\n        setItems(storedItems);\n      });\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <section className={classes.appContainer}>\n        <AppHeader />\n        <Container\n          component=\"main\"\n          className={classes.mainContainer}\n          maxWidth={false}\n          disableGutters\n        >\n          { isLoaded ? (\n            <Switch>\n              <Route path=\"/new\">\n                <ItemAdd saveHandler={addItem} />\n              </Route>\n              <Route path=\"/edit/:itemId\">\n                <RenderDetails />\n              </Route>\n              <Route path=\"/map\">\n                <MapView items={items} handleSaveItem={saveItem} />\n                <AppAdd />\n              </Route>\n              <Route path=\"/cards\">\n                <ItemCards\n                  items={items}\n                  itemIndex={currentItemIndex}\n                />\n                <AppAdd />\n              </Route>\n              <Route path=\"/\">\n                <Home items={items} />\n                <AppAdd />\n              </Route>\n            </Switch>\n          ) : (\n            <div className={classes.loading}>Loading...</div>\n          )}\n        </Container>\n        <AppNav\n          navValue={currentNavValue}\n          navChangeHandler={setCurrentNavValue}\n        />\n      </section>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport './index.css';\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router hashType=\"noslash\">\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}